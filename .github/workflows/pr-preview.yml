on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
permissions:
  contents: read
  actions: write
  packages: write
  pull-requests: write
jobs:
  integration-tests:
    name: Run Integration Tests
    if: github.event.action != 'closed' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - name: Run Integration Tests
        run: |
          echo "Running integration tests for PR #${{ github.event.pull_request.number }}..."
          nix run --accept-flake-config .#runTests
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
          CI: true
      - name: Comment test results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? '✅' : '❌';
            const comment = `${emoji} Integration tests ${status === 'success' ? 'passed' : 'failed'}`;
            
            // Find existing test comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number
            });
            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Integration tests')
            );
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: comment
              });
            }
  
  deploy-pr-preview:
    name: Deploy PR Preview
    if: github.event.action != 'closed' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - name: Deploy PR Preview
        run: |
          echo "Deploying PR #${{ github.event.pull_request.number }} preview..."
          nix run --accept-flake-config .#pr-preview deploy ${{ github.event.pull_request.number }}
        env:
          MASTER_FLY_AUTH_TOKEN: ${{ secrets.MASTER_FLY_AUTH_TOKEN }}
          FLY_ORG: personal
      - name: Comment deployment URL
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const app_name = `pr-${pr_number}-conneroh-com`;
            const url = `https://${app_name}.fly.dev`;
            const comment = `🚀 PR Preview deployed to: ${url}`;
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number
            });
            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('PR Preview deployed')
            );
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: comment
              });
            }
  
  destroy-pr-preview:
    name: Destroy PR Preview
    if: github.event.action == 'closed' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - name: Destroy PR Preview
        run: |
          echo "Destroying PR #${{ github.event.pull_request.number }} preview..."
          nix run --accept-flake-config .#pr-preview -- destroy ${{ github.event.pull_request.number }}
        env:
          MASTER_FLY_AUTH_TOKEN: ${{ secrets.MASTER_FLY_AUTH_TOKEN }}
          FLY_ORG: personal
      - name: Comment deployment removal
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const comment = `🧹 PR Preview has been destroyed.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: comment
            });

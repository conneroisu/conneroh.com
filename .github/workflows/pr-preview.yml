name: PR Preview Deployment
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  actions: write
  packages: write
  pull-requests: write

jobs:
  deploy-pr-preview:
    name: Deploy PR Preview
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main

      - name: Deploy PR Preview
        run: |
          echo "Deploying PR #${{ github.event.pull_request.number }} preview..."
          nix run --accept-flake-config .#pr-preview deploy ${{ github.event.pull_request.number }}

        env:
          MASTER_FLY_AUTH_TOKEN: ${{ secrets.MASTER_FLY_AUTH_TOKEN }}
          FLY_ORG: personal

      - name: Comment deployment URL
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const app_name = `pr-${pr_number}-conneroh-com`;
            const url = `https://${app_name}.fly.dev`;

            const comment = `ðŸš€ PR Preview deployed to: ${url}`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('PR Preview deployed')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: comment
              });
            }

  destroy-pr-preview:
    name: Destroy PR Preview
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main

      - name: Destroy PR Preview
        run: |
          echo "Destroying PR #${{ github.event.pull_request.number }} preview..."
          nix run --accept-flake-config .#pr-preview -- destroy ${{ github.event.pull_request.number }}
        env:
          MASTER_FLY_AUTH_TOKEN: ${{ secrets.MASTER_FLY_AUTH_TOKEN }}
          FLY_ORG: personal

      - name: Comment deployment removal
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;

            const comment = `ðŸ§¹ PR Preview has been destroyed.`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: comment
            });

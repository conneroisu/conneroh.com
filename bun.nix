# This file was autogenerated by `bun2nix`, editing it is not recommended.
# Consume it with `callPackage` in your actual derivation -> https://nixos-and-flakes.thiscute.world/nixpkgs/callpackage
{
  lib,
  fetchurl,
  runCommand,
  libarchive,
  bun,
  makeWrapper,
  ...
}: let
  # Set of Bun packages to install
  packages = {
    "@alpinejs/intersect" = {
      out_path = "@alpinejs/intersect";
      binaries = {
      };
      pkg = fetchurl {
        name = "@alpinejs/intersect@3.14.9";
        url = "https://registry.npmjs.org/@alpinejs/intersect/-/intersect-3.14.9.tgz";
        hash = "sha256-wFtr78dKhPhSrwTlcxqBQ+6nsZcPrW4OZo1Ge6mhVOc=";
      };
    };
    "@popperjs/core" = {
      out_path = "@popperjs/core";
      binaries = {
      };
      pkg = fetchurl {
        name = "@popperjs/core@2.11.8";
        url = "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz";
        hash = "sha256-jgm9+pEgNWaOYs6mEyG84ny9ARuFZyBV2yXScb1jr0k=";
      };
    };
    "@types/alpinejs" = {
      out_path = "@types/alpinejs";
      binaries = {
      };
      pkg = fetchurl {
        name = "@types/alpinejs@3.13.11";
        url = "https://registry.npmjs.org/@types/alpinejs/-/alpinejs-3.13.11.tgz";
        hash = "sha256-R+5HQDLB86YXkbUgnDcm/SnHZSPjyfDyYNlVy7QuTik=";
      };
    };
    "@types/alpinejs__intersect" = {
      out_path = "@types/alpinejs__intersect";
      binaries = {
      };
      pkg = fetchurl {
        name = "@types/alpinejs__intersect@3.13.4";
        url = "https://registry.npmjs.org/@types/alpinejs__intersect/-/alpinejs__intersect-3.13.4.tgz";
        hash = "sha256-aQjur+u1IxVcBEJJfyNg+pUHDJZJLsOCnt3c3abTxAM=";
      };
    };
    "@types/bun" = {
      out_path = "@types/bun";
      binaries = {
      };
      pkg = fetchurl {
        name = "@types/bun@1.2.4";
        url = "https://registry.npmjs.org/@types/bun/-/bun-1.2.4.tgz";
        hash = "sha256-O01ctlMKEB5nmokJir6UwrPEPWaW9zhiqS0YkwPVX9Y=";
      };
    };
    "@types/mathjax" = {
      out_path = "@types/mathjax";
      binaries = {
      };
      pkg = fetchurl {
        name = "@types/mathjax@0.0.40";
        url = "https://registry.npmjs.org/@types/mathjax/-/mathjax-0.0.40.tgz";
        hash = "sha256-ZtfHomPxt+iAvfb8RnstCbWqWBggE6jEwGUtCZ3PEYU=";
      };
    };
    "@types/node" = {
      out_path = "@types/node";
      binaries = {
      };
      pkg = fetchurl {
        name = "@types/node@22.13.5";
        url = "https://registry.npmjs.org/@types/node/-/node-22.13.5.tgz";
        hash = "sha256-jtFd0kKkgHHRYLsT8YUk7PgWSyu0nVwrUHm+IMzNRKQ=";
      };
    };
    "@types/ws" = {
      out_path = "@types/ws";
      binaries = {
      };
      pkg = fetchurl {
        name = "@types/ws@8.5.14";
        url = "https://registry.npmjs.org/@types/ws/-/ws-8.5.14.tgz";
        hash = "sha256-SsUn5egoHI/5PcxHQwwtNupaBcwgePqjR3uTG7Ew37w=";
      };
    };
    "@vue/reactivity" = {
      out_path = "@vue/reactivity";
      binaries = {
      };
      pkg = fetchurl {
        name = "@vue/reactivity@3.1.5";
        url = "https://registry.npmjs.org/@vue/reactivity/-/reactivity-3.1.5.tgz";
        hash = "sha256-nNOO5PQ6ZwR1hbndoPvc/upHhUkPbmd4GWhBR6nUOcQ=";
      };
    };
    "@vue/shared" = {
      out_path = "@vue/shared";
      binaries = {
      };
      pkg = fetchurl {
        name = "@vue/shared@3.1.5";
        url = "https://registry.npmjs.org/@vue/shared/-/shared-3.1.5.tgz";
        hash = "sha256-n7bFNEvu8+hoGhl3GhMoeGs61+i0MelDpU+VTM6OYXs=";
      };
    };
    "alpinejs" = {
      out_path = "alpinejs";
      binaries = {
      };
      pkg = fetchurl {
        name = "alpinejs@3.14.8";
        url = "https://registry.npmjs.org/alpinejs/-/alpinejs-3.14.8.tgz";
        hash = "sha256-9V2GjDhUUkVLF+v3LUhzpGNXkSCdgu+wfCPCqYw4ofw=";
      };
    };
    "bun-types" = {
      out_path = "bun-types";
      binaries = {
      };
      pkg = fetchurl {
        name = "bun-types@1.2.4";
        url = "https://registry.npmjs.org/bun-types/-/bun-types-1.2.4.tgz";
        hash = "sha256-lXqzNu+EFE1bzON4rLGrSdws76vuyStC1Ehxa3n/6/0=";
      };
    };
    "caniuse-lite" = {
      out_path = "caniuse-lite";
      binaries = {
      };
      pkg = fetchurl {
        name = "caniuse-lite@1.0.30001707";
        url = "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001707.tgz";
        hash = "sha256-YbWMwCx687HRkZ2BxVLbZ+Bicktz6YM1qrdFUNHfp6s=";
      };
    };
    "htmx-ext-preload" = {
      out_path = "htmx-ext-preload";
      binaries = {
      };
      pkg = fetchurl {
        name = "htmx-ext-preload@2.1.1";
        url = "https://registry.npmjs.org/htmx-ext-preload/-/htmx-ext-preload-2.1.1.tgz";
        hash = "sha256-4PbKzAZyxoJSwbmMLE2VdQh8mQwjVqOgqIEo6RCDK0k=";
      };
    };
    "htmx.org" = {
      out_path = "htmx.org";
      binaries = {
      };
      pkg = fetchurl {
        name = "htmx.org@2.0.4";
        url = "https://registry.npmjs.org/htmx.org/-/htmx.org-2.0.4.tgz";
        hash = "sha256-o0mI0bnwBaRY1ZOqjXSGU3y4eLisO4JwPbEmiYMSPsw=";
      };
    };
    "preline" = {
      out_path = "preline";
      binaries = {
      };
      pkg = fetchurl {
        name = "preline@2.7.0";
        url = "https://registry.npmjs.org/preline/-/preline-2.7.0.tgz";
        hash = "sha256-q403TWQSjHgPrg8zRtW3LyOd4WY+aEeO08Yc85WhaXc=";
      };
    };
    "tailwindcss" = {
      out_path = "tailwindcss";
      binaries = {
      };
      pkg = fetchurl {
        name = "tailwindcss@4.0.9";
        url = "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.0.9.tgz";
        hash = "sha256-kw0dfQQ5MRjcvU8Vrs5nTIsOWIsqqNx9tPFvk+xxSvQ=";
      };
    };
    "typescript" = {
      out_path = "typescript";
      binaries = {
        "tsc" = "../typescript/bin/tsc";
        "tsserver" = "../typescript/bin/tsserver";
      };
      pkg = fetchurl {
        name = "typescript@5.7.3";
        url = "https://registry.npmjs.org/typescript/-/typescript-5.7.3.tgz";
        hash = "sha256-gM/KElS6uOgdY5F45C1kBthW+6bjTK1g0atQ7m5ffrs=";
      };
    };
    "undici-types" = {
      out_path = "undici-types";
      binaries = {
      };
      pkg = fetchurl {
        name = "undici-types@6.20.0";
        url = "https://registry.npmjs.org/undici-types/-/undici-types-6.20.0.tgz";
        hash = "sha256-coyp/P9nY3Lk3NZIteJvu9sonsK89nXnYBzCE0pejW4=";
      };
    };
  };

  # Build the node modules directory
  nodeModules = runCommand "node-modules" {
    nativeBuildInputs = [ 
      libarchive 
      makeWrapper
    ];
  } ''
    mkdir -p $out/node_modules/.bin

    # Extract a given package to it's destination
    extract() {
      local pkg=$1
      local dest=$2
      
      mkdir -p "$dest"
      bsdtar --extract \
        --file "$pkg" \
        --directory "$dest" \
        --strip-components=1 \
        --no-same-owner \
        --no-same-permissions

      chmod -R a+X "$dest"
    }

    # Process each package
    ${lib.concatStringsSep "\n" (lib.mapAttrsToList (name: pkg: ''
      echo "Installing package ${name}..."

      mkdir -p "$out/node_modules/${pkg.out_path}"
      extract "${pkg.pkg}" "$out/node_modules/${pkg.out_path}"
      
      # Handle binaries if they exist
      ${lib.concatStringsSep "\n" (lib.mapAttrsToList (binName: binPath: ''
        ln -sf "${binPath}" "$out/node_modules/.bin/${binName}"
      '') pkg.binaries)}
    '') packages)}

    # Force bun instead of node for script execution
    makeWrapper ${bun}/bin/bun $out/bin/node
    export PATH="$out/bin:$PATH"

    patchShebangs $out/node_modules
  '';

in {
  inherit nodeModules packages;
}

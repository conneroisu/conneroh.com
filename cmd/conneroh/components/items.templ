package components

import (
	"github.com/conneroisu/conneroh.com/internal/data/gen"
	"github.com/conneroisu/conneroh.com/internal/hx"
	"github.com/conneroisu/twerge"
	"strconv"
)

templ ProjectItem(project *gen.Project) {
	<div
		class={ twerge.It("transition-all flex transform hover:-translate-y-3 duration-300 overflow-hidden flex-col h-full bg-gray-800 hover:shadow-lg shadow-md rounded-lg") }
		aria-label={ project.Title }
	>
		<a
			hx-target={ hx.Bodiody.Sel }
			hx-get={ project.PagePath() }
			hx-push-url={ project.PagePath() }
			class={ twerge.It("cursor-pointer h-full") }
			preload="mouseover"
		>
			<div class={ twerge.It("relative w-full") }>
				@Image(
					project.BannerPath,
					project.Title,
					twerge.It("w-full h-48 object-cover"),
				)
			</div>
			<div
				class={ twerge.It("flex-grow flex-col flex p-6") }
			>
				<h2
					class={ twerge.It("text-white line-clamp-2 mb-3 text-xl hover:underline font-semibold") }
				>
					{ project.Title }
				</h2>
				<p
					class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
				>
					{ project.Description }
				</p>
				<div
					class={ twerge.It("grid flex-wrap gap-2 mb-4 grid-cols-2") }
					x-data="{ allTags: false }"
				>
					for i, tag := range project.Tags {
						if i < 8 {
							@TagControl(tag)
						} else {
							<div x-show="allTags">
								@TagControl(tag)
							</div>
						}
					}
					if len(project.Tags) > 8 {
						<button
							type="button"
							class={ twerge.It("w-full text-blue-200 px-3 items-center flex-row flex text-sm bg-blue-900 transition-colors py-1 hover:bg-blue-800 justify-between font-medium h-8 rounded-full hover:underline") }
							x-on:click.stop="allTags = !allTags"
							x-show="!allTags"
						>
							@Icon("ellipsis", templ.Attributes{})
							<span>Show More</span>
						</button>
						<button
							type="button"
							class={ twerge.It("w-full text-blue-200 px-3 items-center flex-row flex text-sm bg-blue-900 transition-colors py-1 hover:bg-blue-800 justify-between font-medium h-8 rounded-full hover:underline") }
							x-on:click.stop="allTags = !allTags"
							x-show="allTags"
						>
							@Icon("minus", templ.Attributes{})
							<span>Show less</span>
						</button>
					}
				</div>
			</div>
			<a
				class={ twerge.It("left-0 flex bottom-3 font-medium hover:underline items-center right-0 text-sm justify-center text-blue-400 absolute") }
				hx-target={ hx.Bodiody.Sel }
				hx-get={ project.PagePath() }
				hx-push-url={ project.PagePath() }
			>
				Read More
				@Icon("arrow-right", templ.Attributes{})
			</a>
			<span
				class={ twerge.It("bg-red-500 py-1 text-gray-200 bottom-0 left-0 px-2 absolute text-xs rounded-tr-md") }
			>
				{ strconv.Itoa(len(project.Posts)) } posts
			</span>
			<span
				class={ twerge.It("right-0 px-2 text-gray-200 text-xs bottom-0 rounded-tl-md bg-blue-500 py-1 absolute") }
			>
				{ strconv.Itoa(len(project.Tags)) } tags
			</span>
		</a>
	</div>
}

templ TagItem(tag *gen.Tag) {
	<a
		hx-target={ hx.Bodiody.Sel }
		hx-get={ tag.PagePath() }
		hx-push-url={ tag.PagePath() }
		class={ twerge.It("p-6 rounded-lg overflow-hidden bg-gray-800 shadow-md hover:shadow-lg duration-300 transform transition-all hover:-translate-y-1") }
		preload="mouseover"
		aria-label={ tag.Title }
	>
		<div
			class={ twerge.It("flex items-center justify-between mb-3 p-6") }
		>
			<h2
				class={ twerge.It("text-xl font-semibold text-white") }
			>
				{ tag.Title }
			</h2>
			<div
				class={ twerge.It("rounded-full flex h-8 justify-center items-center bg-gray-700 w-8") }
			>
				@Icon(tag.Icon, templ.Attributes{"class": "stoke-white"})
			</div>
		</div>
		<div
			class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
		>
			{ tag.Description }
		</div>
		<span
			class={ twerge.It("bg-red-500 py-1 text-gray-200 bottom-0 left-0 px-2 absolute text-xs rounded-tr-md") }
		>
			{ strconv.Itoa(len(tag.Posts)) } posts
		</span>
		<span
			class={ twerge.It("right-0 px-2 text-gray-200 text-xs bottom-0 rounded-tl-md bg-blue-500 py-1 absolute") }
		>
			{ strconv.Itoa(len(tag.Projects)) } projects
		</span>
	</a>
}

templ PostItem(post *gen.Post) {
	<div
		class={ twerge.It("rounded-lg overflow-hidden bg-gray-800 shadow-md hover:shadow-lg duration-300 transform transition-all hover:-translate-y-1") }
		x-transition:enter={ twerge.It("duration-200 transition ease-out") }
		x-transition:enter-start={ twerge.It("translate-y-4 opacity-0 transform") }
		x-transition:enter-end={ twerge.It("transform translate-y-0 opacity-100") }
		aria-label={ post.Title }
	>
		<a
			hx-target={ hx.Bodiody.Sel }
			hx-get={ post.PagePath() }
			hx-push-url={ post.PagePath() }
			class={ twerge.It("cursor-pointer") }
			preload="mouseover"
		>
			@Image(
				post.BannerPath,
				post.Title,
				twerge.It("w-full h-48 object-cover"),
			)
			<div
				class={ twerge.It("p-6") }
			>
				<h2
					class={ twerge.It("text-white line-clamp-2 mb-3 text-xl hover:underline font-semibold") }
				>
					{ post.Title }
				</h2>
				<p
					class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
				>
					{ post.Description }
				</p>
				<div
					class={ twerge.It("grid flex-wrap gap-2 mb-4 grid-cols-2") }
					x-data="{ allTags: false }"
				>
					for i, tag := range post.Tags {
						if i < 8 {
							@TagControl(tag)
						} else {
							<div x-show="allTags">
								@TagControl(tag)
							</div>
						}
					}
					if len(post.Tags) > 8 {
						<button
							type="button"
							class={ twerge.It("w-full text-blue-200 px-3 items-center flex-row flex text-sm bg-blue-900 transition-colors py-1 hover:bg-blue-800 justify-between font-medium h-8 rounded-full hover:underline") }
							x-on:click.stop="allTags = !allTags"
							x-show="!allTags"
						>
							@Icon("ellipsis", templ.Attributes{})
							<span>({ strconv.Itoa(len(post.Tags) - 8) }) More</span>
						</button>
						<button
							type="button"
							class={ twerge.It("w-full text-blue-200 px-3 items-center flex-row flex text-sm bg-blue-900 transition-colors py-1 hover:bg-blue-800 justify-between font-medium h-8 rounded-full hover:underline") }
							x-on:click.stop="allTags = !allTags"
							x-show="allTags"
						>
							@Icon("minus", templ.Attributes{})
							<span>Show less</span>
						</button>
					}
				</div>
			</div>
			<a
				class={ twerge.It("left-0 flex bottom-5 font-medium hover:underline items-center right-0 text-sm justify-center text-blue-400 absolute") }
			>
				Read More
				@Icon("arrow-right", templ.Attributes{})
			</a>
			<span
				class={ twerge.It("bg-red-500 py-1 text-gray-200 bottom-0 left-0 px-2 absolute text-xs rounded-tr-md") }
			>
				{ strconv.Itoa(len(post.Tags)) } tags | { strconv.Itoa(len(post.Projects)) } projects
			</span>
			<div
				class={ twerge.It("rounded-tl-md px-2 text-xs py-1 text-white absolute right-0 bottom-0 bg-blue-500") }
			>
				{ post.CreatedAt.Format("Jan 02, 2006") }
			</div>
		</a>
	</div>
}

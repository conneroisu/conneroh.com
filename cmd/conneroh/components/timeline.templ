package components

import (
	"github.com/conneroisu/conneroh.com/internal/assets"
)

templ EmploymentTimeline(employments []*assets.Employment) {
	<div class={ "relative" }>
		<div class={ "absolute left-1/2 -translate-x-1/2 w-0.5 h-full bg-gradient-to-b from-green-500 via-green-400 to-transparent" }></div>
		<div class={ "space-y-12" }>
			for i, employment := range employments {
				if i%2 == 0 {
					<div class={ "relative flex justify-start" }>
						<div class={ "absolute left-1/2 -translate-x-1/2 w-4 h-4 bg-green-500 rounded-full border-4 border-gray-900 z-10" }></div>
						<a
							class={ "w-5/12 mr-auto text-right" }
							href={ templ.SafeURL(employment.PagePath()) }
							hx-target="#bodiody"
							hx-get={ employment.PagePath() }
							hx-push-url="true"
							preload="mouseover"
						>
							<div class={ "bg-gray-800 rounded-lg p-6 shadow-lg hover:shadow-xl transition-all hover:-translate-y-1" }>
								<div class={ "text-sm text-green-400 font-semibold mb-1" }>
									{ employment.CreatedAt.Format("Jan 2006") } -
									if employment.EndDate != nil {
										{ employment.EndDate.Format("Jan 2006") }
									} else {
										Present
									}
								</div>
								<h3 class={ "text-xl font-bold text-white mb-2" }>{ employment.Title }</h3>
								<p class={ "text-gray-300 text-sm line-clamp-3" }>{ employment.Description }</p>
								if len(employment.Tags) > 0 {
									<div class={ "mt-3 flex flex-wrap gap-2 justify-end" }>
										for j, tag := range employment.Tags {
											if j < 4 {
												<span
													class={ "text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded hover:bg-green-600 hover:text-white transition-colors cursor-pointer inline-block" }
													hx-get={ tag.PagePath() }
													hx-target="#bodiody"
													hx-push-url="true"
													onclick="event.stopPropagation(); event.preventDefault();"
													hx-on:click="event.stopPropagation()"
													preload="mouseover"
												>
													{ tag.Title }
												</span>
											}
										}
										if len(employment.Tags) > 4 {
											<span class={ "text-xs text-gray-500" }>+{ len(employment.Tags) - 4 }</span>
										}
									</div>
								}
							</div>
						</a>
					</div>
				} else {
					<div class={ "relative flex justify-end" }>
						<div class={ "absolute left-1/2 -translate-x-1/2 w-4 h-4 bg-green-500 rounded-full border-4 border-gray-900 z-10" }></div>
						<a
							class={ "w-5/12 ml-auto" }
							href={ templ.SafeURL(employment.PagePath()) }
							hx-target="#bodiody"
							hx-get={ employment.PagePath() }
							hx-push-url="true"
							preload="mouseover"
						>
							<div class={ "bg-gray-800 rounded-lg p-6 shadow-lg hover:shadow-xl transition-all hover:-translate-y-1" }>
								<div class={ "text-sm text-green-400 font-semibold mb-1" }>
									{ employment.CreatedAt.Format("Jan 2006") } -
									if employment.EndDate != nil {
										{ employment.EndDate.Format("Jan 2006") }
									} else {
										Present
									}
								</div>
								<h3 class={ "text-xl font-bold text-white mb-2" }>{ employment.Title }</h3>
								<p class={ "text-gray-300 text-sm line-clamp-3" }>{ employment.Description }</p>
								if len(employment.Tags) > 0 {
									<div class={ "mt-3 flex flex-wrap gap-2" }>
										for j, tag := range employment.Tags {
											if j < 4 {
												<span
													class={ "text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded hover:bg-green-600 hover:text-white transition-colors cursor-pointer inline-block" }
													hx-get={ tag.PagePath() }
													hx-target="#bodiody"
													hx-push-url="true"
													onclick="event.stopPropagation(); event.preventDefault();"
													hx-on:click="event.stopPropagation()"
													preload="mouseover"
												>
													{ tag.Title }
												</span>
											}
										}
										if len(employment.Tags) > 4 {
											<span class={ "text-xs text-gray-500" }>+{ len(employment.Tags) - 4 }</span>
										}
									</div>
								}
							</div>
						</a>
					</div>
				}
			}
		</div>
	</div>
}

templ EmploymentTimelineMobile(employments []*assets.Employment) {
	<div class={ "relative" }>
		<div class={ "absolute left-4 w-0.5 h-full bg-gradient-to-b from-green-500 via-green-400 to-transparent" }></div>
		<div class={ "space-y-8 pl-12" }>
			for _, employment := range employments {
				<div class={ "relative" }>
					<div class={ "absolute -left-8 top-6 w-4 h-4 bg-green-500 rounded-full border-4 border-gray-900" }></div>
					<a
						href={ templ.SafeURL(employment.PagePath()) }
						hx-target="#bodiody"
						hx-get={ employment.PagePath() }
						hx-push-url="true"
						preload="mouseover"
						class={ "block" }
					>
						<div class={ "bg-gray-800 rounded-lg p-4 shadow-lg hover:shadow-xl transition-all" }>
							<div class={ "text-xs text-green-400 font-semibold mb-1" }>
								{ employment.CreatedAt.Format("Jan 2006") } - 
								if employment.EndDate != nil {
									{ employment.EndDate.Format("Jan 2006") }
								} else {
									Present
								}
							</div>
							<h3 class={ "text-lg font-bold text-white mb-2" }>{ employment.Title }</h3>
							<p class={ "text-gray-300 text-sm line-clamp-2" }>{ employment.Description }</p>
							if len(employment.Tags) > 0 {
								<div class={ "mt-3 flex flex-wrap gap-2" }>
									for j, tag := range employment.Tags {
										if j < 4 {
											<span 
												class={ "text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded hover:bg-green-600 hover:text-white transition-colors cursor-pointer inline-block" }
												hx-get={ tag.PagePath() }
												hx-target="#bodiody"
												hx-push-url="true"
												onclick="event.stopPropagation(); event.preventDefault();"
												hx-on:click="event.stopPropagation()"
												preload="mouseover"
											>
												{ tag.Title }
											</span>
										}
									}
									if len(employment.Tags) > 4 {
										<span class={ "text-xs text-gray-500" }>+{ len(employment.Tags) - 4 }</span>
									}
								</div>
							}
						</div>
					</a>
				</div>
			}
		</div>
	</div>
}

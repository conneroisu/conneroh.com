package components

import (
	"github.com/conneroisu/conneroh.com/internal/assets"
	"github.com/conneroisu/twerge"
)

templ EmploymentTimeline(employments []*assets.Employment) {
	<div class={ twerge.It("relative") }>
		<div class={ twerge.It("absolute left-1/2 -translate-x-1/2 w-0.5 h-full bg-gradient-to-b from-green-500 via-green-400 to-transparent") }></div>
		<div class={ twerge.It("space-y-12") }>
			for i, employment := range employments {
				<div class={ twerge.If(i%2 == 0, "relative flex justify-start", "relative flex justify-end") }>
					<div class={ twerge.It("absolute left-1/2 -translate-x-1/2 w-4 h-4 bg-green-500 rounded-full border-4 border-gray-900 z-10") }></div>
					<a
						class={ twerge.If(i%2 == 0, "w-5/12 mr-auto text-right", "w-5/12 ml-auto") }
						href={ templ.SafeURL(employment.PagePath()) }
						hx-target="#bodiody"
						hx-get={ employment.PagePath() }
						hx-push-url="true"
						preload="mouseover"
					>
						<div class={ twerge.It("bg-gray-800 rounded-lg p-6 shadow-lg hover:shadow-xl transition-all hover:-translate-y-1") }>
							<div class={ twerge.It("text-sm text-green-400 font-semibold mb-1") }>
								{ employment.CreatedAt.Format("Jan 2006") } - 
								if employment.EndDate != nil {
									{ employment.EndDate.Format("Jan 2006") }
								} else {
									Present
								}
							</div>
							<h3 class={ twerge.It("text-xl font-bold text-white mb-2") }>{ employment.Title }</h3>
							<p class={ twerge.It("text-gray-300 text-sm line-clamp-3") }>{ employment.Description }</p>
							if len(employment.Tags) > 0 {
								<div class={ twerge.If(i%2 == 0, "mt-3 flex flex-wrap gap-2 justify-end", "mt-3 flex flex-wrap gap-2") }>
									for j, tag := range employment.Tags {
										if j < 4 {
											<span 
												class={ twerge.It("text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded hover:bg-green-600 hover:text-white transition-colors cursor-pointer inline-block") }
												hx-get={ tag.PagePath() }
												hx-target="#bodiody"
												hx-push-url="true"
												onclick="event.stopPropagation(); event.preventDefault();"
												hx-on:click="event.stopPropagation()"
												preload="mouseover"
											>
												{ tag.Title }
											</span>
										}
									}
									if len(employment.Tags) > 4 {
										<span class={ twerge.It("text-xs text-gray-500") }>+{ len(employment.Tags) - 4 }</span>
									}
								</div>
							}
						</div>
					</a>
				</div>
			}
		</div>
	</div>
}

templ EmploymentTimelineMobile(employments []*assets.Employment) {
	<div class={ twerge.It("relative") }>
		<div class={ twerge.It("absolute left-4 w-0.5 h-full bg-gradient-to-b from-green-500 via-green-400 to-transparent") }></div>
		<div class={ twerge.It("space-y-8 pl-12") }>
			for _, employment := range employments {
				<div class={ twerge.It("relative") }>
					<div class={ twerge.It("absolute -left-8 top-6 w-4 h-4 bg-green-500 rounded-full border-4 border-gray-900") }></div>
					<a
						href={ templ.SafeURL(employment.PagePath()) }
						hx-target="#bodiody"
						hx-get={ employment.PagePath() }
						hx-push-url="true"
						preload="mouseover"
						class={ twerge.It("block") }
					>
						<div class={ twerge.It("bg-gray-800 rounded-lg p-4 shadow-lg hover:shadow-xl transition-all") }>
							<div class={ twerge.It("text-xs text-green-400 font-semibold mb-1") }>
								{ employment.CreatedAt.Format("Jan 2006") } - 
								if employment.EndDate != nil {
									{ employment.EndDate.Format("Jan 2006") }
								} else {
									Present
								}
							</div>
							<h3 class={ twerge.It("text-lg font-bold text-white mb-2") }>{ employment.Title }</h3>
							<p class={ twerge.It("text-gray-300 text-sm line-clamp-2") }>{ employment.Description }</p>
							if len(employment.Tags) > 0 {
								<div class={ twerge.It("mt-3 flex flex-wrap gap-2") }>
									for j, tag := range employment.Tags {
										if j < 4 {
											<span 
												class={ twerge.It("text-xs bg-gray-700 text-gray-300 px-2 py-1 rounded hover:bg-green-600 hover:text-white transition-colors cursor-pointer inline-block") }
												hx-get={ tag.PagePath() }
												hx-target="#bodiody"
												hx-push-url="true"
												onclick="event.stopPropagation(); event.preventDefault();"
												hx-on:click="event.stopPropagation()"
												preload="mouseover"
											>
												{ tag.Title }
											</span>
										}
									}
									if len(employment.Tags) > 4 {
										<span class={ twerge.It("text-xs text-gray-500") }>+{ len(employment.Tags) - 4 }</span>
									}
								</div>
							}
						</div>
					</a>
				</div>
			}
		</div>
	</div>
}

package components

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/internal/data/gen"
	"github.com/conneroisu/conneroh.com/internal/hx"
	"github.com/conneroisu/conneroh.com/internal/routing"
	"github.com/conneroisu/twerge"
	"strconv"
)

const (
	activeBtnStyle   = "px-3 py-2 rounded-md bg-blue-600 text-white font-medium"
	inactiveBtnStyle = "px-3 py-2 rounded-md border border-gray-700 bg-gray-800 text-gray-300 hover:bg-gray-700 transition-colors"
	ellipsisStyle    = "px-2 py-1 text-gray-400"
)

templ Icon(
	id string,
	attrs templ.Attributes,
) {
	<img
		src={ fmt.Sprintf("https://conneroh.fly.storage.tigris.dev/svg/%s.svg", id) }
		{ attrs... }
	/>
}

templ Image(
	id string,
	alt string,
	class string,
) {
	<img
		src={ fmt.Sprintf("https://conneroh.fly.storage.tigris.dev/%s", id) }
		alt={ alt }
		class={ class }
	/>
}

// See conneroh.views.List & conneroh.views.search
templ TagControl(
	tag *gen.Tag,
) {
	<div
		class={ twerge.It("text-blue-200 px-3 items-center flex-row flex text-sm bg-blue-900 transition-colors py-1 hover:bg-blue-800 justify-between font-medium h-8 rounded-full hover:underline") }
		hx-get={ tag.PagePath() }
		hx-target={ hx.Bodiody.Sel }
		hx-push-url={ tag.PagePath() }
		preload="mouseover"
	>
		<div
			class={ twerge.It("items-center flex pr-3") }
		>
			@Icon(tag.Icon, templ.Attributes{})
		</div>
		<div
			class={ twerge.It("items-center flex") }
		>
			<a>
				{ tag.Title }
			</a>
		</div>
	</div>
}

// Main pagination component
templ Pagination(page, pageCount int, target routing.PluralPath) {
	<div class={ twerge.It("flex justify-center items-center mt-8 space-x-2") }>
		@previousPageButton(page, target)
		<div class={ twerge.It("hidden md:flex space-x-2") }>
			@renderPageNumbers(page, pageCount, target, routing.MaxDesktopPageNumber)
		</div>
		<div class={ twerge.It("flex md:hidden space-x-2") }>
			@renderPageNumbers(page, pageCount, target, routing.MaxMobilePageNumber)
		</div>
		@nextPageButton(page, pageCount, target)
	</div>
}

// Helper to render pagination numbers based on device (mobile or desktop)
templ renderPageNumbers(page, pageCount int, target routing.PluralPath, maxPageNumber int) {
	for _, pageNum := range routing.GeneratePagination(page, pageCount, routing.MaxMobilePageNumber) {
		@pageButton(pageNum, page, target)
	}
}

// Reusable page button component
templ pageButton(pageNum string, currentPage int, target routing.PluralPath) {
	if pageNum == strconv.Itoa(currentPage) {
		<span class={ twerge.It(activeBtnStyle) }>
			{ pageNum }
		</span>
	} else {
		if pageNum == "..." {
			@Icon("ellipsis", templ.Attributes{
				"class": twerge.It(ellipsisStyle),
			})
		} else {
			<a
				hx-get={ fmt.Sprintf("/search/%s?page=%s", target, pageNum) }
				name="pager"
				hx-target="#listi"
				hx-include="[name='search']"
				hx-push-url="true"
				class={ twerge.It(inactiveBtnStyle) }
			>
				{ pageNum }
			</a>
		}
	}
}

// Previous page button
templ previousPageButton(currentPage int, target routing.PluralPath) {
	if currentPage > 1 {
		<a
			hx-get={ fmt.Sprintf("/search/%s?page=%d", target, currentPage-1) }
			hx-target="#listi"
			hx-include="[name='search']"
			hx-push-url="true"
			class={ twerge.It(inactiveBtnStyle + " flex items-center") }
			aria-label="Previous page"
		>
			{ "<" }
		</a>
	} else {
		<span
			class={ twerge.It(inactiveBtnStyle + " opacity-50 flex items-center") }
			aria-disabled="true"
		>
			{ "<" }
		</span>
	}
}

// Next page button
templ nextPageButton(currentPage, pageCount int, target routing.PluralPath) {
	if currentPage < pageCount {
		<a
			hx-get={ fmt.Sprintf("/search/%s?page=%d", target, currentPage+1) }
			hx-target="#listi"
			hx-include="[name='search']"
			hx-swap="innerHTML"
			hx-push-url="true"
			class={ twerge.It(inactiveBtnStyle + " flex items-center") }
			aria-label="Next page"
		>
			{ ">" }
		</a>
	} else {
		<span
			class={ twerge.It(inactiveBtnStyle + " opacity-50 flex items-center") }
			aria-disabled="true"
		>
			{ ">" }
		</span>
	}
}

templ SearchResult() {
}

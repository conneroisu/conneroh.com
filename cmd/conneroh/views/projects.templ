package views

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/cmd/conneroh/components"
	"github.com/conneroisu/conneroh.com/cmd/conneroh/layouts"
	"github.com/conneroisu/conneroh.com/internal/data/master"
)

templ Project(
	project *master.FullProject,
	fullPosts *[]master.FullPost,
	fullProjects *[]master.FullProject,
	fullTags *[]master.FullTag,
	fullPostsSlugMap *map[string]master.FullPost,
	fullProjectsSlugMap *map[string]master.FullProject,
	fullTagsSlugMap *map[string]master.FullTag,
) {
	<div class="container mx-auto px-4 py-8 max-w-4xl">
		<header class="mb-8">
			<h1
				class="text-4xl font-bold text-gray-900 dark:text-white mb-4"
			>
				{ project.Title }
			</h1>
			if len(project.Tags) > 0 {
				<div class="flex flex-wrap gap-2 mb-6">
					for _, tag := range project.Tags {
						<a
							href={ templ.SafeURL(fmt.Sprintf("/tag/%s", tag.Slug)) }
							class="inline-block px-3 py-1 text-sm font-medium rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors"
						>
							{ tag.Slug }
						</a>
					}
				</div>
			}
		</header>
		<div
			class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden p-6 mb-8"
		>
			<div
				class="border-b border-gray-200 dark:border-gray-700 pb-4 mb-4"
			>
				<h2
					class="text-2xl font-semibold text-gray-900 dark:text-white"
				>
					About this project
				</h2>
				<div
					class="w-16 h-1 bg-blue-500 mt-2"
				></div>
			</div>
			<div
				class="prose prose-xl dark:prose-invert max-w-none"
			>
				<p
					class="text-gray-700 dark:text-gray-300 leading-relaxed whitespace-pre-line"
				>
					{ project.Description }
				</p>
				<div
					class="mt-6 flex items-center text-sm text-gray-500 dark:text-gray-400"
				>
					<i class="nf nf-cod-calendar mr-2 text-lg"></i>
					<span>Created: { formatDate(project.CreatedAt) }</span>
				</div>
			</div>
		</div>
		<div
			class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden p-6 mb-8"
		>
			<h2
				class="text-2xl font-semibold text-gray-900 dark:text-white mb-4"
			>
				Content
			</h2>
			<div
				class="prose prose-lg prose-headings:mt-6 prose-headings:mb-4 prose-p:my-4 prose-ul:my-4 prose-li:my-2 prose-pre:my-6 max-w-none text-gray-700 dark:text-gray-300 leading-relaxed"
			>
				@templ.Raw(project.Content)
			</div>
		</div>
		if len(project.Posts) > 0 {
			<div
				class="mt-12"
			>
				<h2
					class="text-2xl font-bold text-gray-900 dark:text-white mb-4"
				>
					Related Posts
				</h2>
				<div
					class="grid grid-cols-1 md:grid-cols-2 gap-6"
				>
					for _, post := range project.Posts {
						<div
							class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden p-6"
						>
							<h3
								class="text-xl font-semibold text-gray-900 dark:text-white mb-2"
							>
								{ post.Title }
							</h3>
							<p
								class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-2"
							>
								{ post.Description }
							</p>
							<a
								href={ templ.SafeURL("/post/" + post.Slug) }
								class="text-blue-600 dark:text-blue-400 hover:underline flex items-center"
							>
								Read Post
								<svg
									xmlns="http://www.w3.org/2000/svg"
									class="h-4 w-4 ml-1"
									viewBox="0 0 20 20"
									fill="currentColor"
								>
									<path
										fill-rule="evenodd"
										d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
										clip-rule="evenodd"
									></path>
								</svg>
							</a>
						</div>
					}
				</div>
			</div>
		}
	</div>
}

templ Projects(
	fullPosts *[]master.FullPost,
	fullProjects *[]master.FullProject,
	fullTags *[]master.FullTag,
	fullPostsSlugMap *map[string]master.FullPost,
	fullProjectsSlugMap *map[string]master.FullProject,
	fullTagsSlugMap *map[string]master.FullTag,
) {
	<div
		class="container mx-auto px-4 py-8"
		x-data="{
			projects: [],
			searchQuery: '',
			selectedTag: '',
			tags: [],
			isLoading: true,
			init() {
				// Initialize projects from the rendered HTML
				this.projects = Array.from(document.querySelectorAll('[data-project-id]')).map(project => {
					return {
						id: project.getAttribute('data-project-id'),
						name: project.getAttribute('data-project-name'),
						description: project.getAttribute('data-project-description'),
						slug: project.getAttribute('data-project-slug'),
						tags: JSON.parse(project.getAttribute('data-project-tags') || '[]')
					};
				});
				const allTags = new Set();
				this.projects.forEach(project => {
					project.tags.forEach(tag => tag.name && allTags.add(tag.name));
				});
				this.tags = Array.from(allTags);
				const urlParams = new URLSearchParams(window.location.search);
				this.searchQuery = urlParams.get('q') || '';
				this.selectedTag = urlParams.get('tag') || '';
				
				// Set loading state to false
				setTimeout(() => this.isLoading = false, 300);
			},
			filteredProjects() {
				return this.projects.filter(project => {
					const matchesSearch = this.searchQuery === '' || 
						project.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
						project.description.toLowerCase().includes(this.searchQuery.toLowerCase());
					const matchesTag = this.selectedTag === '' ||
						(project.tags && project.tags.some(tag => tag.name === this.selectedTag));
					
					return matchesSearch && matchesTag;
				});
			},
			updateURL() {
				// Update URL with current filters without page reload
				const params = new URLSearchParams();
				if (this.searchQuery) params.set('q', this.searchQuery);
				if (this.selectedTag) params.set('tag', this.selectedTag);

				const newURL = window.location.pathname + 
					(params.toString() ? '?' + params.toString() : '');

				window.history.replaceState({}, '', newURL);
			},
			clearFilters() {
				this.searchQuery = '';
				this.selectedTag = '';
				this.updateURL();
			}
		}"
	>
		<h1
			class="text-3xl font-bold mb-6 text-gray-900 dark:text-white"
		>
			Projects
		</h1>
		// Search and Filter Controls using the Searcher component
		@layouts.Searcher(
			"searchQuery",
			"selectedTag",
			"Search projects...",
			"All Tags",
			"tags",
			"updateURL()",
			"updateURL()",
		)
		// Results info
		@layouts.SearchResultInfo("projects", "filteredProjects()")
		// Loading state
		<div x-show="isLoading">
			@layouts.LoadingState()
		</div>
		// Projects Grid
		<div
			x-show="!isLoading"
			class="grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-6"
		>
			// Hidden data elements for Alpine to process
			if fullProjects != nil {
				for _, project := range *fullProjects {
					<div
						class="hidden"
						data-project-id={ fmt.Sprintf("%d", project.ID) }
						data-project-name={ project.Title }
						data-project-description={ project.Description }
						data-project-slug={ project.Slug }
						data-project-tags={ formatTags(project.Tags) }
					></div>
					@components.ProjectEmbed(&project)
				}
			}
			// Template for displaying projects
			<template
				x-for="project in filteredProjects()"
				:key="project.id"
			>
				<div
					class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1 p-6"
				>
					<a
						:href="`/project/${project.slug}`"
					>
						<h2
							class="text-xl font-semibold text-gray-900 dark:text-white mb-2"
							x-text="project.name"
						></h2>
						<p
							class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3"
							x-text="project.description"
						></p>
						<div
							class="flex flex-wrap gap-2 mb-4"
						>
							<template
								x-for="tag in project.tags"
								:key="tag.id"
							>
								<span
									class="ctag"
									x-text="tag.name"
									@click.stop="selectedTag = tag.name; updateURL()"
								></span>
							</template>
						</div>
						<a
							:href="`/project/${project.slug}`"
							class="text-blue-600 dark:text-blue-400 hover:underline inline-flex items-center group"
						>
							View Project
							<i class="nf nf-cod-arrow_right h-4 w-4 ml-1 transition-transform duration-200 transform group-hover:translate-x-1"></i>
						</a>
					</a>
				</div>
			</template>
		</div>
	</div>
}

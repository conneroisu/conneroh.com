package views

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/internal/data/master"
)

templ Project(project *master.FullProject) {
	<div class="container mx-auto px-4 py-8 max-w-4xl">
		<header class="mb-8">
			<h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">{ project.Name }</h1>
			<div class="flex flex-wrap gap-2 mb-6">
				for _, tag := range project.Tags {
					<span class="inline-block px-3 py-1 text-sm font-medium rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
						{ tag.Name }
					</span>
				}
			</div>
		</header>
		<div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden p-6 mb-8">
			<h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">About this project</h2>
			<p class="text-gray-700 dark:text-gray-300 whitespace-pre-line">{ project.Description }</p>
		</div>
		if len(project.Posts) > 0 {
			<div class="mt-12">
				<h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Related Posts</h2>
				<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
					for _, post := range project.Posts {
						<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden p-6">
							<h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">{ post.Title }</h3>
							<p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-2">{ post.Description }</p>
							<a href={ templ.SafeURL("/post/" + post.Slug) } class="text-blue-600 dark:text-blue-400 hover:underline flex items-center">
								Read Post
								<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
									<path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
								</svg>
							</a>
						</div>
					}
				</div>
			</div>
		}
	</div>
}

templ Projects(fullProjects *[]master.FullProject) {
	<div
		class="container mx-auto px-4 py-8"
		x-data="{
			projects: [],
			searchQuery: '',
			selectedTag: '',
			tags: [],
			isLoading: true,
			init() {
				// Initialize projects from the rendered HTML
				this.projects = Array.from(document.querySelectorAll('[data-project-id]')).map(project => {
					return {
						id: project.getAttribute('data-project-id'),
						name: project.getAttribute('data-project-name'),
						description: project.getAttribute('data-project-description'),
						slug: project.getAttribute('data-project-slug'),
						tags: JSON.parse(project.getAttribute('data-project-tags') || '[]')
					};
				});
				
				// Extract all unique tags
				const allTags = new Set();
				this.projects.forEach(project => {
					project.tags.forEach(tag => tag.name && allTags.add(tag.name));
				});
				this.tags = Array.from(allTags);

				// Check URL parameters for pre-selected filters
				const urlParams = new URLSearchParams(window.location.search);
				this.searchQuery = urlParams.get('q') || '';
				this.selectedTag = urlParams.get('tag') || '';
				
				// Set loading state to false
				setTimeout(() => this.isLoading = false, 300);
			},
			filteredProjects() {
				return this.projects.filter(project => {
					const matchesSearch = this.searchQuery === '' || 
						project.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
						project.description.toLowerCase().includes(this.searchQuery.toLowerCase());
					
					const matchesTag = this.selectedTag === '' ||
						(project.tags && project.tags.some(tag => tag.name === this.selectedTag));
					
					return matchesSearch && matchesTag;
				});
			},
			updateURL() {
				// Update URL with current filters without page reload
				const params = new URLSearchParams();
				if (this.searchQuery) params.set('q', this.searchQuery);
				if (this.selectedTag) params.set('tag', this.selectedTag);

				const newURL = window.location.pathname + 
					(params.toString() ? '?' + params.toString() : '');

				window.history.replaceState({}, '', newURL);
			},
			clearFilters() {
				this.searchQuery = '';
				this.selectedTag = '';
				this.updateURL();
			}
		}"
	>
		<h1 class="text-3xl font-bold mb-6 text-gray-900 dark:text-white">Projects</h1>
		<!-- Search and Filter Controls -->
		<div class="flex flex-col md:flex-row justify-between mb-8 gap-4">
			<div class="relative w-full md:w-1/2">
				<input
					type="text"
					x-model="searchQuery"
					@input="updateURL"
					placeholder="Search projects..."
					class="w-full px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
				/>
				<div class="absolute right-3 top-2.5 text-gray-400">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
					</svg>
				</div>
			</div>
			<div class="w-full md:w-1/3">
				<select
					x-model="selectedTag"
					@change="updateURL"
					class="w-full px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
				>
					<option value="">All Tags</option>
					<template x-for="tag in tags" :key="tag">
						<option x-text="tag" :value="tag"></option>
					</template>
				</select>
			</div>
		</div>
		<!-- Results info -->
		<p class="text-sm text-gray-500 dark:text-gray-400 mb-4" x-text="`Showing ${filteredProjects().length} of ${projects.length} projects`"></p>
		<!-- Loading state -->
		<div x-show="isLoading" class="col-span-full flex justify-center py-12">
			<div class="animate-pulse flex space-x-4">
				<div class="rounded-full bg-gray-300 dark:bg-gray-700 h-12 w-12"></div>
				<div class="flex-1 space-y-4 py-1">
					<div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-3/4"></div>
					<div class="space-y-2">
						<div class="h-4 bg-gray-300 dark:bg-gray-700 rounded"></div>
						<div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-5/6"></div>
					</div>
				</div>
			</div>
		</div>
		<!-- Projects Grid -->
		<div x-show="!isLoading" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
			<!-- Hidden data elements for Alpine to process -->
			if fullProjects != nil {
				for _, project := range *fullProjects {
					<div
						class="hidden"
						data-project-id={ fmt.Sprintf("%d", project.ID) }
						data-project-name={ project.Name }
						data-project-description={ project.Description }
						data-project-slug={ project.Slug }
						data-project-tags={ formatTags(project.Tags) }
					></div>
				}
			}
			<!-- Template for displaying projects -->
			<template x-for="project in filteredProjects()" :key="project.id">
				<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
					<div class="p-6">
						<h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-2" x-text="project.name"></h2>
						<p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3" x-text="project.description"></p>
						<div class="flex flex-wrap gap-2 mb-4">
							<template x-for="tag in project.tags" :key="tag.id">
								<span
									class="inline-block px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 cursor-pointer hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors"
									x-text="tag.name"
									@click.stop="selectedTag = tag.name; updateURL()"
								></span>
							</template>
						</div>
						<a :href="`/project/${project.slug}`" class="text-blue-600 dark:text-blue-400 hover:underline inline-flex items-center group">
							View Project
							<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 transition-transform duration-200 transform group-hover:translate-x-1" viewBox="0 0 20 20" fill="currentColor">
								<path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
							</svg>
						</a>
					</div>
				</div>
			</template>
			<!-- Empty state -->
			<div
				class="col-span-full py-12 text-center text-gray-500 dark:text-gray-400"
				x-show="!isLoading && filteredProjects().length === 0"
			>
				<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
				</svg>
				<p class="text-lg">No projects match your search</p>
				<button
					@click="clearFilters"
					class="mt-4 px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 hover:underline"
				>
					Clear filters
				</button>
			</div>
		</div>
	</div>
}

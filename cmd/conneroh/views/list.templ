package views

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/internal/data/gen"
	"github.com/conneroisu/conneroh.com/internal/routing"
	"strconv"
)

templ search(
	target routing.PluralTarget,
) {
	<div class="p-3 border-b border-gray-700">
		<div class="relative">
			<input
				id={ fmt.Sprintf("search-%s", target) }
				class="sinput"
				type="search"
				name="search"
				placeholder={ fmt.Sprintf("Search %s...", target) }
				hx-post={ fmt.Sprintf("/search/%s", target) }
				hx-trigger="input changed delay:500ms, keyup[key=='Enter'], load"
				hx-target={ fmt.Sprintf("#list-%s", target) }
				hx-indicator="#search-indicator"
			/>
			<div class="absolute left-3 top-2.5 text-gray-500">
				@icon("search", templ.Attributes{})
			</div>
			<div
				id="search-indicator"
				class="absolute right-3 top-2.5 text-blue-500 htmx-indicator"
			>
				<svg class="animate-spin h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
					<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
					<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
				</svg>
			</div>
		</div>
		<div id={ fmt.Sprintf("list-suggest-%s", target) } class="mt-2"></div>
	</div>
}

// TODO: Make Sure all see-more -> Are aligned at the bottom of each list item
templ List(
	target routing.PluralTarget,
	posts *[]*gen.Post,
	projects *[]*gen.Project,
	tags *[]*gen.Tag,
) {
	<div
		class="container mx-auto px-4 py-8"
	>
		<h1 class="text-3xl font-bold mb-6 text-white">
			Search { target }
		</h1>
		@search(
			target,
		)
		<div
			id={ fmt.Sprintf("list-%s", target) }
			class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
		>
			switch target {
				case routing.PluralTargetPost:
					for _, post := range *posts {
						@listPostItem(post)
					}
				case routing.PluralTargetProject:
					for _, project := range *projects {
						@listProjectItem(project)
					}
				case routing.PluralTargetTag:
					for _, tag := range *tags {
						@listTagItem(tag)
					}
			}
		</div>
	</div>
}

templ listProjectItem(project *gen.Project) {
	<div
		class="listIt"
	>
		<a
			hx-target="#bodiody"
			hx-get={ fmt.Sprintf("/morph/project/%s", project.Slug) }
			hx-push-url={ fmt.Sprintf("/project/%s", project.Slug) }
			hx-swap="outerHTML"
			hx-trigger="click"
			preload="mouseover"
		>
			<h2
				class="cdo-ctitle"
			>
				{ project.Title }
			</h2>
			<p
				class="cdo-stitle"
			>
				{ project.Description }
			</p>
			<p class="cdo-stitle">
				<span class="font-bold">
					{ strconv.Itoa(len(project.Tags)) }
				</span>
				tags
			</p>
			<div
				class="flex flex-wrap gap-2 mb-4 grid grid-cols-2"
				x-data="{ po_open: false }"
			>
				for i, tag := range project.Tags {
					if i < 8 {
						@TagControl(tag, "#list-project")
					} else {
						// TODO: Add a "show more" button
						@icon("ellipsis", templ.Attributes{
							"class":           "ctag flex items-center h-8 flex-row justify-between w-full hover:underline",
							"x-on:mouseover":  "po_open = true",
							"x-on:mouseleave": "po_open = false",
							"x-on:click":      "po_open = !po_open",
						})
					}
				}
			</div>
			<a
				class="text-blue-400 hover:underline inline-flex items-center group"
				hx-target="#bodiody"
				hx-get={ fmt.Sprintf("/morph/project/%s", project.Slug) }
				hx-swap="outerHTML"
				hx-trigger="click"
				hx-push-url={ fmt.Sprintf("/project/%s", project.Slug) }
				preload="mouseover"
			>
				View Project
				@icon("arrow-right", templ.Attributes{})
			</a>
		</a>
	</div>
}

templ listTagItem(
	tag *gen.Tag,
) {
	<a
		hx-target="#bodiody"
		hx-swap="outerHTML"
		hx-trigger="click"
		hx-get={ fmt.Sprintf("/morph/tag/%s", tag.Slug) }
		hx-push-url={ fmt.Sprintf("/tag/%s", tag.Slug) }
		preload="mouseover"
		class="listIt"
	>
		<div
			class="p-6"
		>
			<div
				class="flex items-center justify-between mb-3"
			>
				<h2
					class="tittle"
				>
					{ tag.Title }
				</h2>
				<div
					class="bg-gray-700 rounded-full flex items-center justify-center h-8 w-8"
				>
					@icon(tag.Icon, templ.Attributes{"class": "stoke-white"})
				</div>
			</div>
			<div
				class="cdo-stitle"
			>
				{ tag.Description }
			</div>
			<div
				class="flex items-center justify-between text-sm"
			>
				<span
					class="text-gray-400"
				>
					{ strconv.Itoa(len(tag.PostSlugs)) } posts
				</span>
				<span
					class="text-gray-400"
				>
					{ strconv.Itoa(len(tag.ProjectSlugs)) } projects
				</span>
			</div>
		</div>
	</a>
}

templ listPostItem(
	post *gen.Post,
) {
	<div
		class="listIt"
		x-transition:enter="transition ease-out duration-200"
		x-transition:enter-start="opacity-0 transform translate-y-4"
		x-transition:enter-end="opacity-100 transform translate-y-0"
	>
		<a
			hx-target="#bodiody"
			hx-swap="outerHTML"
			hx-trigger="click"
			hx-get={ fmt.Sprintf("/morph/post/%s", post.Slug) }
			hx-push-url={ fmt.Sprintf("/post/%s", post.Slug) }
			class="block cursor-pointer"
		>
			@image(
				post.BannerPath,
				post.Title,
				"w-full h-48 object-cover object-center",
			)
			<div
				class="absolute bottom-0 right-0 bg-blue-500 text-white text-xs px-2 py-1 rounded-tl-md"
			>
				{ post.CreatedAt.Format("Jan 02, 2006") }
			</div>
			<div class="p-6">
				<h2
					class="text-xl font-semibold text-white mb-3 line-clamp-2 hover:underline"
				>
					{ post.Title }
				</h2>
				<p
					class="cdo-stitle"
				>
					{ post.Description }
				</p>
				<div
					class="flex flex-wrap gap-2 mb-4 grid grid-cols-2"
					x-data="{ po_open: false }"
				>
					for i, tag := range post.Tags {
						if i < 8 {
							@TagControl(tag, "#list-project")
						} else {
							// TODO: Add a "show more" button
							@icon("ellipsis", templ.Attributes{
								"class":           "ctag flex items-center h-8 flex-row justify-between w-full hover:underline",
								"x-on:mouseover":  "po_open = true",
								"x-on:mouseleave": "po_open = false",
								"x-on:click":      "po_open = !po-open",
							})
						}
					}
				</div>
				<div
					class="flex justify-between items-center"
				>
					<a
						class="seemere"
					>
						Read More
						@icon("arrow-right", templ.Attributes{})
					</a>
				</div>
			</div>
		</a>
	</div>
}

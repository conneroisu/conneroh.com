package views

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/cmd/conneroh/components"
	"github.com/conneroisu/conneroh.com/internal/data/gen"
	"github.com/conneroisu/conneroh.com/internal/routing"
	"strconv"
)

templ search(
	target routing.PluralTarget,
) {
	<div class="p-3 border-b border-gray-200 dark:border-gray-700">
		<div class="relative">
			<input
				id={ fmt.Sprintf("search-%s", target) }
				class="sinput"
				type="search"
				name="search"
				placeholder={ fmt.Sprintf("Search %s...", target) }
				hx-post={ fmt.Sprintf("/search/%s", target) }
				hx-trigger="input changed delay:500ms, keyup[key=='Enter'], load"
				hx-target={ fmt.Sprintf("#list-%s", target) }
				hx-indicator="#search-indicator"
			/>
			<div class="absolute left-3 top-2.5 text-gray-400 dark:text-gray-500">
				@components.Icon("search", templ.Attributes{})
			</div>
			<div
				id="search-indicator"
				class="absolute right-3 top-2.5 text-blue-500 htmx-indicator"
			>
				<svg class="animate-spin h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
					<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
					<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
				</svg>
			</div>
		</div>
		<div id={ fmt.Sprintf("list-suggest-%s", target) } class="mt-2"></div>
	</div>
}

templ List(
	target routing.PluralTarget,
	posts *[]*gen.Post,
	projects *[]*gen.Project,
	tags *[]*gen.Tag,
) {
	<div
		class="container mx-auto px-4 py-8"
	>
		<h1 class="text-3xl font-bold mb-6 text-gray-900 dark:text-white">
			Search { target }
		</h1>
		@search(
			target,
		)
		<div
			id={ fmt.Sprintf("list-%s", target) }
			class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
		>
			switch target {
				case routing.PluralTargetPost:
					for _, post := range *posts {
						@components.PostEmbed(post)
					}
				case routing.PluralTargetProject:
					for _, project := range *projects {
						@listProjectItem(project)
					}
				case routing.PluralTargetTag:
					for _, tag := range *tags {
						@components.TagEmbed(tag)
					}
			}
		</div>
	</div>
}

templ listProjectItem(project *gen.Project) {
	<div
		class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1 p-6"
	>
		<a
			hx-target="#bodiody"
			hx-get={ fmt.Sprintf("/hateoas/morphs/project/%s", project.Slug) }
			hx-push-url={ fmt.Sprintf("/project/%s", project.Slug) }
			hx-swap="outerHTML"
			hx-trigger="click"
			preload="mouseover"
		>
			<h2
				class="text-xl font-semibold text-gray-900 dark:text-white mb-2"
			>
				{ project.Title }
			</h2>
			<p
				class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3"
			>
				{ project.Description }
			</p>
			<p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
				<span class="font-bold">
					{ strconv.Itoa(len(project.Tags)) }
				</span>
				tags
			</p>
			<div
				class="flex flex-wrap gap-2 mb-4 grid grid-cols-2"
				x-data="{ po_open: false }"
			>
				for i, tag := range project.Tags {
					if i < 8 {
						@components.TagControl(tag, "#list-project")
					} else {
						// TODO: Add a "show more" button
						@components.Icon("ellipsis", templ.Attributes{
							"class":           "ctag flex items-center h-8 flex-row justify-between w-full hover:underline",
							"x-on:mouseover":  "po_open = true",
							"x-on:mouseleave": "po_open = false",
							"x-on:click":      "po_open = !po-open",
						})
					}
				}
			</div>
			<a
				class="text-blue-600 dark:text-blue-400 hover:underline inline-flex items-center group"
				hx-target="#bodiody"
				hx-get={ fmt.Sprintf("/hateoas/morphs/project/%s", project.Slug) }
				hx-swap="outerHTML"
				hx-trigger="click"
				hx-push-url={ fmt.Sprintf("/project/%s", project.Slug) }
				preload="mouseover"
			>
				View Project
				@components.Icon("arrow-right", templ.Attributes{})
			</a>
		</a>
	</div>
}

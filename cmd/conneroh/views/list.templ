package views

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/internal/data/gen"
	"github.com/conneroisu/conneroh.com/internal/routing"
	"github.com/conneroisu/twerge"
	"strconv"
)

templ search(
	target routing.PluralTarget,
) {
	<div
		class={ twerge.It("p-3 border-gray-700 border-b") }
	>
		<div
			class={ twerge.It("relative") }
		>
			<input
				id={ fmt.Sprintf("search-%s", target) }
				class={ twerge.It("text-white border-gray-600 rounded-md focus:outline-none bg-gray-700 border focus:ring-blue-500 w-full focus:ring-2 pr-4 py-2 pl-10") }
				type="search"
				name="search"
				placeholder={ fmt.Sprintf("Search %s...", target) }
				hx-post={ fmt.Sprintf("/search/%s", target) }
				hx-trigger="input changed delay:500ms, keyup[key=='Enter'], load"
				hx-target={ fmt.Sprintf("#list-%s", target) }
				hx-indicator="#search-indicator"
			/>
			<div
				class={ twerge.It("text-gray-500 absolute left-3 top-2.5") }
			>
				@icon("search", templ.Attributes{})
			</div>
			<div
				id="search-indicator"
				class={ twerge.It("htmx-indicator absolute right-3 top-2.5 text-blue-500") }
			>
				<svg
					class={ twerge.It("animate-spin h-5 w-5") }
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
				>
					<circle
						class={ twerge.It("opacity-25") }
						cx="12"
						cy="12"
						r="10"
						stroke="currentColor"
						stroke-width="4"
					></circle>
					<path
						class={ twerge.It("opacity-75") }
						fill="currentColor"
						d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
					></path>
				</svg>
			</div>
		</div>
		<div
			id={ fmt.Sprintf("list-suggest-%s", target) }
			class={ twerge.It("mt-2") }
		></div>
	</div>
}

templ List(
	target routing.PluralTarget,
	posts *[]*gen.Post,
	projects *[]*gen.Project,
	tags *[]*gen.Tag,
	postReq []string,
	projectReq []string,
	tagReq []string,
) {
	<div
		class={ twerge.It("py-8 px-4 container mx-auto") }
	>
		<h1
			class={ twerge.It("text-white text-3xl font-bold mb-6") }
		>
			Search { target }
		</h1>
		@search(
			target,
		)
		@Results(
			target,
			posts,
			projects,
			tags,
		)
	</div>
}

templ Results(
	target routing.PluralTarget,
	posts *[]*gen.Post,
	projects *[]*gen.Project,
	tags *[]*gen.Tag,
) {
	<div
		id={ fmt.Sprintf("list-%s", target) }
		class={ twerge.It("md:grid-cols-2 lg:grid-cols-3 gap-6 grid grid-cols-1") }
	>
		switch target {
			case routing.PluralTargetPost:
				for _, post := range *posts {
					@listPostItem(post)
				}
			case routing.PluralTargetProject:
				for _, project := range *projects {
					@listProjectItem(project)
				}
			case routing.PluralTargetTag:
				for _, tag := range *tags {
					@listTagItem(tag)
				}
		}
	</div>
}

templ listProjectItem(project *gen.Project) {
	<div
		class={ twerge.It("transition-all flex transform hover:-translate-y-3 duration-300 rounded-lg overflow-hidden flex-col h-full bg-gray-800 hover:shadow-lg p-6 shadow-md") }
	>
		<a
			hx-target="#bodiody"
			hx-swap="outerHTML"
			hx-trigger="click"
			hx-get={ fmt.Sprintf("/morph/project/%s", project.Slug) }
			hx-push-url={ fmt.Sprintf("/project/%s", project.Slug) }
			class={ twerge.It("cursor-pointer h-full") }
			preload="mouseover"
		>
			@image(
				project.BannerPath,
				project.Title,
				twerge.It("w-full h-48 object-cover"),
			)
			<div
				class={ twerge.It("flex-grow flex-col flex p-6") }
			>
				<h2
					class={ twerge.It("text-white line-clamp-2 mb-3 text-xl hover:underline font-semibold") }
				>
					{ project.Title }
				</h2>
				<p
					class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
				>
					{ project.Description }
				</p>
				<div
					class={ twerge.It("grid flex-wrap gap-2 mb-4 grid-cols-2") }
					x-data="{ po_open: false }"
				>
					for i, tag := range project.Tags {
						if i < 8 {
							@TagControl(tag, "#list-project")
						} else {
							@icon("ellipsis", templ.Attributes{
								"class":           twerge.It("w-full text-blue-200 px-3 items-center flex-row flex text-sm bg-blue-900 transition-colors py-1 hover:bg-blue-800 justify-between font-medium h-8 rounded-full hover:underline"),
								"x-on:mouseover":  "po_open = true",
								"x-on:mouseleave": "po_open = false",
								"x-on:click":      "po_open = !po-open",
							})
						}
					}
				</div>
			</div>
			<a
				class={ twerge.It("left-0 flex bottom-5 font-medium hover:underline items-center right-0 text-sm justify-center text-blue-400 absolute") }
			>
				Read More
				@icon("arrow-right", templ.Attributes{})
			</a>
			<span
				class={ twerge.It("bg-red-500 py-1 text-gray-200 bottom-0 left-0 px-2 absolute text-xs rounded-tr-md") }
			>
				{ strconv.Itoa(len(project.Posts)) } posts
			</span>
			<span
				class={ twerge.It("right-0 px-2 text-gray-200 text-xs bottom-0 rounded-tl-md bg-blue-500 py-1 absolute") }
			>
				{ strconv.Itoa(len(project.Tags)) } tags
			</span>
		</a>
	</div>
}

templ listTagItem(
	tag *gen.Tag,
) {
	<a
		hx-target="#bodiody"
		hx-swap="outerHTML"
		hx-trigger="click"
		hx-get={ fmt.Sprintf("/morph/tag/%s", tag.Slug) }
		hx-push-url={ fmt.Sprintf("/tag/%s", tag.Slug) }
		class={ twerge.It("p-6 rounded-lg overflow-hidden bg-gray-800 shadow-md hover:shadow-lg duration-300 transform transition-all hover:-translate-y-1") }
		preload="mouseover"
	>
		<div
			class={ twerge.It("p-6") }
		>
			<div
				class={ twerge.It("flex items-center justify-between mb-3") }
			>
				<h2
					class={ twerge.It("text-xl font-semibold text-white") }
				>
					{ tag.Title }
				</h2>
				<div
					class={ twerge.It("rounded-full flex h-8 justify-center items-center bg-gray-700 w-8") }
				>
					@icon(tag.Icon, templ.Attributes{"class": "stoke-white"})
				</div>
			</div>
			<div
				class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
			>
				{ tag.Description }
			</div>
			<span
				class={ twerge.It("bg-red-500 py-1 text-gray-200 bottom-0 left-0 px-2 absolute text-xs rounded-tr-md") }
			>
				{ strconv.Itoa(len(tag.Posts)) } posts
			</span>
			<span
				class={ twerge.It("right-0 px-2 text-gray-200 text-xs bottom-0 rounded-tl-md bg-blue-500 py-1 absolute") }
			>
				{ strconv.Itoa(len(tag.Projects)) } projects
			</span>
		</div>
	</a>
}

templ listPostItem(
	post *gen.Post,
) {
	<div
		class={ twerge.It("p-6 rounded-lg overflow-hidden bg-gray-800 shadow-md hover:shadow-lg duration-300 transform transition-all hover:-translate-y-1") }
		x-transition:enter={ twerge.It("duration-200 transition ease-out") }
		x-transition:enter-start={ twerge.It("translate-y-4 opacity-0 transform") }
		x-transition:enter-end={ twerge.It("transform translate-y-0 opacity-100") }
	>
		<a
			hx-target="#bodiody"
			hx-swap="outerHTML"
			hx-trigger="click"
			hx-get={ fmt.Sprintf("/morph/post/%s", post.Slug) }
			hx-push-url={ fmt.Sprintf("/post/%s", post.Slug) }
			class={ twerge.It("block cursor-pointer") }
			preload="mouseover"
		>
			@image(
				post.BannerPath,
				post.Title,
				twerge.It("w-full h-48 object-cover"),
			)
			<div
				class={ twerge.It("p-6") }
			>
				<h2
					class={ twerge.It("text-white line-clamp-2 mb-3 text-xl hover:underline font-semibold") }
				>
					{ post.Title }
				</h2>
				<p
					class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
				>
					{ post.Description }
				</p>
				<div
					class={ twerge.It("grid flex-wrap gap-2 mb-4 grid-cols-2") }
					x-data="{ po_open: false }"
				>
					for i, tag := range post.Tags {
						if i < 8 {
							@TagControl(tag, "#list-project")
						} else {
							// TODO: Add a "show more" button
							@icon("ellipsis", templ.Attributes{
								"class":           twerge.It("w-full text-blue-200 px-3 items-center flex-row flex text-sm bg-blue-900 transition-colors py-1 hover:bg-blue-800 justify-between font-medium h-8 rounded-full hover:underline"),
								"x-on:mouseover":  "po_open = true",
								"x-on:mouseleave": "po_open = false",
								"x-on:click":      "po_open = !po-open",
							})
						}
					}
				</div>
			</div>
			<a
				class={ twerge.It("left-0 flex bottom-5 font-medium hover:underline items-center right-0 text-sm justify-center text-blue-400 absolute") }
			>
				Read More
				@icon("arrow-right", templ.Attributes{})
			</a>
			<span
				class={ twerge.It("bg-red-500 py-1 text-gray-200 bottom-0 left-0 px-2 absolute text-xs rounded-tr-md") }
			>
				{ strconv.Itoa(len(post.Tags)) } tags | { strconv.Itoa(len(post.Projects)) } projects
			</span>
			<div
				class={ twerge.It("rounded-tl-md px-2 text-xs py-1 text-white absolute right-0 bottom-0 bg-blue-500") }
			>
				{ post.CreatedAt.Format("Jan 02, 2006") }
			</div>
		</a>
	</div>
}

// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/cmd/conneroh/components"
	"github.com/conneroisu/conneroh.com/cmd/conneroh/layouts"
	"github.com/conneroisu/conneroh.com/internal/data/master"
)

type ListTargets = string

const (
	ListTargetsPosts    ListTargets = "posts"
	ListTargetsProjects ListTargets = "projects"
	ListTargetsTags     ListTargets = "tags"
	ListTargetsWorks    ListTargets = "works"
)

func List(
	target ListTargets,
	posts *[]master.FullPost,
	projects *[]master.FullProject,
	tags *[]master.FullTag,
	fullPostsSlugMap *map[string]master.FullPost,
	fullProjectsSlugMap *map[string]master.FullProject,
	fullTagsSlugMap *map[string]master.FullTag,
) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		switch target {
		case ListTargetsPosts:
			templ_7745c5c3_Err = postsTempl(
				posts,
				projects,
				tags,
				fullPostsSlugMap,
				fullProjectsSlugMap,
				fullTagsSlugMap,
			).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case ListTargetsProjects:
			templ_7745c5c3_Err = projectsTempl(
				posts,
				projects,
				tags,
				fullPostsSlugMap,
				fullProjectsSlugMap,
				fullTagsSlugMap,
			).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case ListTargetsTags:
			templ_7745c5c3_Err = tagsTempl(
				posts,
				projects,
				tags,
				fullPostsSlugMap,
				fullProjectsSlugMap,
				fullTagsSlugMap,
			).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

func postsTempl(
	posts *[]master.FullPost,
	projects *[]master.FullProject,
	tags *[]master.FullTag,
	fullPostsSlugMap *map[string]master.FullPost,
	fullProjectsSlugMap *map[string]master.FullProject,
	fullTagsSlugMap *map[string]master.FullTag,
) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"container mx-auto px-4 py-8\" x-data=\"{\n\t\t\tposts: [],\n\t\t\tsearchQuery: &#39;&#39;,\n\t\t\tselectedTag: &#39;&#39;,\n\t\t\ttags: [],\n\t\t\tisLoading: true,\n\t\t\t\n\t\t\tinit() {\n\t\t\t\t// Initialize posts from the rendered template data\n\t\t\t\tthis.posts = Array.from(document.querySelectorAll(&#39;[data-post-id]&#39;)).map(post =&gt; ({\n\t\t\t\t\tid: post.getAttribute(&#39;data-post-id&#39;),\n\t\t\t\t\ttitle: post.getAttribute(&#39;data-post-title&#39;),\n\t\t\t\t\tdescription: post.getAttribute(&#39;data-post-description&#39;),\n\t\t\t\t\tslug: post.getAttribute(&#39;data-post-slug&#39;),\n\t\t\t\t\tdate: post.getAttribute(&#39;data-post-date&#39;),\n\t\t\t\t\tbanner: post.getAttribute(&#39;data-post-banner&#39;),\n\t\t\t\t\ttags: JSON.parse(post.getAttribute(&#39;data-post-tags&#39;) || &#39;[]&#39;)\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\t// Extract all unique tags\n\t\t\t\tconst allTags = new Set();\n\t\t\t\tthis.posts.forEach(post =&gt; {\n\t\t\t\t\tpost.tags.forEach(tag =&gt; allTags.add(tag.name));\n\t\t\t\t});\n\t\t\t\tthis.tags = Array.from(allTags).sort();\n\t\t\t\t\n\t\t\t\t// Check URL for existing tags or search parameters\n\t\t\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\t\t\tthis.searchQuery = urlParams.get(&#39;q&#39;) || &#39;&#39;;\n\t\t\t\tthis.selectedTag = urlParams.get(&#39;tag&#39;) || &#39;&#39;;\n\t\t\t\t\n\t\t\t\t// Hide loading screen after small delay for better transition\n\t\t\t\tsetTimeout(() =&gt; this.isLoading = false, 300);\n\t\t\t},\n\t\t\t\n\t\t\tfilteredPosts() {\n\t\t\t\treturn this.posts.filter(post =&gt; {\n\t\t\t\t\tconst matchesSearch = this.searchQuery === &#39;&#39; || \n\t\t\t\t\t\tpost.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\n\t\t\t\t\t\tpost.description.toLowerCase().includes(this.searchQuery.toLowerCase());\n\t\t\t\t\n\t\t\t\t\tconst matchesTag = this.selectedTag === &#39;&#39; ||\n\t\t\t\t\t\tpost.tags.some(tag =&gt; tag.name === this.selectedTag);\n\t\t\t\t\n\t\t\t\t\treturn matchesSearch &amp;&amp; matchesTag;\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tupdateURL() {\n\t\t\t\t// Update URL with current filters without page reload\n\t\t\t\tconst params = new URLSearchParams();\n\t\t\t\tif (this.searchQuery) params.set(&#39;q&#39;, this.searchQuery);\n\t\t\t\tif (this.selectedTag) params.set(&#39;tag&#39;, this.selectedTag);\n\n\t\t\t\tconst newURL = window.location.pathname + \n\t\t\t\t\t(params.toString() ? &#39;?&#39; + params.toString() : &#39;&#39;);\n\n\t\t\t\twindow.history.replaceState({}, &#39;&#39;, newURL);\n\t\t\t},\n\t\t\t\n\t\t\tclearFilters() {\n\t\t\t\tthis.searchQuery = &#39;&#39;;\n\t\t\t\tthis.selectedTag = &#39;&#39;;\n\t\t\t\tthis.updateURL();\n\t\t\t}\n\t\t}\"><h1 class=\"text-3xl font-bold mb-6 text-gray-900 dark:text-white\">Blog Posts</h1><!-- Search and Filter Controls -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.Searcher(
			"searchQuery",
			"selectedTag",
			"Search posts...",
			"All Tags",
			"tags",
			"updateURL()",
			"updateURL()",
		).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.SearchResultInfo("posts", "filteredPosts()").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div x-show=\"isLoading\" x-transition>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.LoadingState().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" x-show=\"!isLoading\" x-transition:enter=\"transition ease-out duration-300\" x-transition:enter-start=\"opacity-0 transform scale-95\" x-transition:enter-end=\"opacity-100 transform scale-100\"><!-- Hidden data elements for Alpine to process -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if posts != nil {
			for _, post := range *posts {
				templ_7745c5c3_Err = components.PostEmbed(&post).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- Template for displaying posts --><template x-for=\"post in filteredPosts()\" :key=\"post.id\"><div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1\" x-transition:enter=\"transition ease-out duration-200\" x-transition:enter-start=\"opacity-0 transform translate-y-4\" x-transition:enter-end=\"opacity-100 transform translate-y-0\"><a hx-target=\"#bodiody\" hx-swap=\"outerHTML\" hx-trigger=\"click\" :hx-push-url=\"/post/{post.slug}\" :hx-get=\"`/hateoas/morphs/post/${post.slug}`\" class=\"block\"><div class=\"relative\"><img :src=\"post.banner || &#39;/dist/placeholder.jpg&#39;\" :alt=\"post.title\" class=\"w-full h-48 object-cover object-center\" loading=\"lazy\"><div class=\"absolute bottom-0 right-0 bg-blue-500 text-white text-xs px-2 py-1 rounded-tl-md\" x-text=\"post.date\"></div></div><div class=\"p-6\"><h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mb-3 line-clamp-2\" x-text=\"post.title\"></h2><p class=\"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3\" x-text=\"post.description\"></p><div class=\"flex flex-wrap gap-2 mb-4\"><template x-for=\"tag in post.tags\" :key=\"tag.id\"><span class=\"ctag\" x-text=\"tag.name\" @click.stop=\"selectedTag = tag.name; updateURL()\"></span></template></div><div class=\"flex justify-between items-center\"><span class=\"text-blue-600 dark:text-blue-400 hover:underline text-sm font-medium flex items-center group\">Read More <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 ml-1 transition-transform duration-200 transform group-hover:translate-x-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14 5l7 7m0 0l-7 7m7-7H3\"></path></svg></span></div></div></a></div></template></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func projectsTempl(
	posts *[]master.FullPost,
	projects *[]master.FullProject,
	tags *[]master.FullTag,
	fullPostsSlugMap *map[string]master.FullPost,
	fullProjectsSlugMap *map[string]master.FullProject,
	fullTagsSlugMap *map[string]master.FullTag,
) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div class=\"container mx-auto px-4 py-8\" x-data=\"{\n\t\t\tprojects: [],\n\t\t\tsearchQuery: &#39;&#39;,\n\t\t\tselectedTag: &#39;&#39;,\n\t\t\ttags: [],\n\t\t\tisLoading: true,\n\t\t\tinit() {\n\t\t\t\t// Initialize projects from the rendered HTML\n\t\t\t\tthis.projects = Array.from(document.querySelectorAll(&#39;[data-project-id]&#39;)).map(project =&gt; {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: project.getAttribute(&#39;data-project-id&#39;),\n\t\t\t\t\t\tname: project.getAttribute(&#39;data-project-name&#39;),\n\t\t\t\t\t\tdescription: project.getAttribute(&#39;data-project-description&#39;),\n\t\t\t\t\t\tslug: project.getAttribute(&#39;data-project-slug&#39;),\n\t\t\t\t\t\ttags: JSON.parse(project.getAttribute(&#39;data-project-tags&#39;) || &#39;[]&#39;)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tconst allTags = new Set();\n\t\t\t\tthis.projects.forEach(project =&gt; {\n\t\t\t\t\tproject.tags.forEach(tag =&gt; tag.name &amp;&amp; allTags.add(tag.name));\n\t\t\t\t});\n\t\t\t\tthis.tags = Array.from(allTags);\n\t\t\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\t\t\tthis.searchQuery = urlParams.get(&#39;q&#39;) || &#39;&#39;;\n\t\t\t\tthis.selectedTag = urlParams.get(&#39;tag&#39;) || &#39;&#39;;\n\t\t\t\t\n\t\t\t\t// Set loading state to false\n\t\t\t\tsetTimeout(() =&gt; this.isLoading = false, 300);\n\t\t\t},\n\t\t\tfilteredProjects() {\n\t\t\t\treturn this.projects.filter(project =&gt; {\n\t\t\t\t\tconst matchesSearch = this.searchQuery === &#39;&#39; || \n\t\t\t\t\t\tproject.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\n\t\t\t\t\t\tproject.description.toLowerCase().includes(this.searchQuery.toLowerCase());\n\t\t\t\t\tconst matchesTag = this.selectedTag === &#39;&#39; ||\n\t\t\t\t\t\t(project.tags &amp;&amp; project.tags.some(tag =&gt; tag.name === this.selectedTag));\n\t\t\t\t\t\n\t\t\t\t\treturn matchesSearch &amp;&amp; matchesTag;\n\t\t\t\t});\n\t\t\t},\n\t\t\tupdateURL() {\n\t\t\t\t// Update URL with current filters without page reload\n\t\t\t\tconst params = new URLSearchParams();\n\t\t\t\tif (this.searchQuery) params.set(&#39;q&#39;, this.searchQuery);\n\t\t\t\tif (this.selectedTag) params.set(&#39;tag&#39;, this.selectedTag);\n\n\t\t\t\tconst newURL = window.location.pathname + \n\t\t\t\t\t(params.toString() ? &#39;?&#39; + params.toString() : &#39;&#39;);\n\n\t\t\t\twindow.history.replaceState({}, &#39;&#39;, newURL);\n\t\t\t},\n\t\t\tclearFilters() {\n\t\t\t\tthis.searchQuery = &#39;&#39;;\n\t\t\t\tthis.selectedTag = &#39;&#39;;\n\t\t\t\tthis.updateURL();\n\t\t\t}\n\t\t}\"><h1 class=\"text-3xl font-bold mb-6 text-gray-900 dark:text-white\">Projects</h1>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.Searcher(
			"searchQuery",
			"selectedTag",
			"Search projects...",
			"All Tags",
			"tags",
			"updateURL()",
			"updateURL()",
		).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.SearchResultInfo("projects", "filteredProjects()").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div x-show=\"isLoading\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.LoadingState().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</div><div x-show=\"!isLoading\" class=\"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-6\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if projects != nil {
			for _, project := range *projects {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<div class=\"hidden\" data-project-id=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", project.ID))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 328, Col: 53}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" data-project-name=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(project.Title)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 329, Col: 39}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" data-project-description=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var6 string
				templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(project.Description)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 330, Col: 52}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" data-project-slug=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var7 string
				templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(project.Slug)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 331, Col: 38}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "\" data-project-tags=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var8 string
				templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(formatTags(project.Tags))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 332, Col: 50}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\"></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = components.ProjectEmbed(&project).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "<template x-for=\"project in filteredProjects()\" :key=\"project.id\"><div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1 p-6\"><a :href=\"`/project/${project.slug}`\"><h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\" x-text=\"project.name\"></h2><p class=\"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3\" x-text=\"project.description\"></p><div class=\"flex flex-wrap gap-2 mb-4\"><template x-for=\"tag in project.tags\" :key=\"tag.id\"><span class=\"ctag\" x-text=\"tag.name\" @click.stop=\"selectedTag = tag.name; updateURL()\"></span></template></div><a :href=\"`/project/${project.slug}`\" class=\"text-blue-600 dark:text-blue-400 hover:underline inline-flex items-center group\">View Project <i class=\"nf nf-cod-arrow_right h-4 w-4 ml-1 transition-transform duration-200 transform group-hover:translate-x-1\"></i></a></a></div></template></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func tagsTempl(
	posts *[]master.FullPost,
	projects *[]master.FullProject,
	tags *[]master.FullTag,
	fullPostsSlugMap *map[string]master.FullPost,
	fullProjectsSlugMap *map[string]master.FullProject,
	fullTagsSlugMap *map[string]master.FullTag,
) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var9 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var9 == nil {
			templ_7745c5c3_Var9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<div class=\"container mx-auto px-4 py-8\" x-data=\"{\n\t\t\ttags: [],\n\t\t\tsearchQuery: &#39;&#39;,\n\t\t\tselectedSection: &#39;&#39;,\n\t\t\tsections: [],\n\t\t\tisLoading: true,\n\t\t\tinit() {\n\t\t\t\t// Initialize the tags from the data attributes in the rendered HTML\n\t\t\t\tthis.tags = Array.from(document.querySelectorAll(&#39;[data-tag-id]&#39;)).map(tag =&gt; {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: tag.getAttribute(&#39;data-tag-id&#39;),\n\t\t\t\t\t\tname: tag.getAttribute(&#39;data-tag-name&#39;),\n\t\t\t\t\t\tdescription: tag.getAttribute(&#39;data-tag-description&#39;),\n\t\t\t\t\t\tslug: tag.getAttribute(&#39;data-tag-slug&#39;),\n\t\t\t\t\t\tsection: tag.getAttribute(&#39;data-tag-section&#39;),\n\t\t\t\t\t\tpostsCount: parseInt(tag.getAttribute(&#39;data-tag-posts-count&#39;) || &#39;0&#39;),\n\t\t\t\t\t\ticon: tag.getAttribute(&#39;data-tag-icon&#39;),\n\t\t\t\t\t\tprojectsCount: parseInt(tag.getAttribute(&#39;data-tag-projects-count&#39;) || &#39;0&#39;)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Extract all unique sections\n\t\t\t\tconst allSections = new Set();\n\t\t\t\tthis.tags.forEach(tag =&gt; {\n\t\t\t\t\tif (tag.section) allSections.add(tag.section);\n\t\t\t\t});\n\t\t\t\tthis.sections = Array.from(allSections);\n\t\t\t\t\n\t\t\t\t// Set loading state to false\n\t\t\t\tsetTimeout(() =&gt; this.isLoading = false, 300);\n\t\t\t},\n\t\t\tfilteredTags() {\n\t\t\t\treturn this.tags.filter(tag =&gt; {\n\t\t\t\t\tconst matchesSearch = this.searchQuery === &#39;&#39; || \n\t\t\t\t\t\ttag.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\n\t\t\t\t\t\ttag.description.toLowerCase().includes(this.searchQuery.toLowerCase());\n\t\t\t\t\t\n\t\t\t\t\tconst matchesSection = this.selectedSection === &#39;&#39; || tag.section === this.selectedSection;\n\t\t\t\t\t\n\t\t\t\t\treturn matchesSearch &amp;&amp; matchesSection;\n\t\t\t\t});\n\t\t\t},\n\t\t\tclearFilters() {\n\t\t\t\tthis.searchQuery = &#39;&#39;;\n\t\t\t\tthis.selectedSection = &#39;&#39;;\n\t\t\t}\n\t\t}\"><h1 class=\"text-3xl font-bold mb-6 text-gray-900 dark:text-white\">Tags</h1>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.Searcher(
			"searchQuery",
			"selectedSection",
			"Search tags...",
			"All Sections",
			"sections",
			"",
			"",
		).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.SearchResultInfo("tags", "filteredTags()").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "<div x-show=\"isLoading\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = layouts.LoadingState().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if tags != nil {
			for _, tag := range *tags {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<div class=\"hidden\" data-tag-id=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var10 string
				templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", tag.ID))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 469, Col: 44}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "\" data-tag-name=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var11 string
				templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(tag.Title)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 470, Col: 30}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\" data-tag-description=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var12 string
				templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(tag.Description)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 471, Col: 43}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "\" data-tag-slug=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var13 string
				templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(tag.Slug)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 472, Col: 29}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "\" data-tag-section=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var14 string
				templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(templ.EscapeString(getTagSection(tag.Slug)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 473, Col: 67}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "\" data-tag-posts-count=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var15 string
				templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", len(tag.Posts)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 474, Col: 61}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "\" data-tag-icon=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var16 string
				templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(tag.Icon)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 475, Col: 29}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\" data-tag-projects-count=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var17 string
				templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", len(tag.Projects)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/conneroh/views/list.templ`, Line: 476, Col: 67}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "\"></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "<div x-show=\"!isLoading\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"><template x-for=\"tag in filteredTags()\" :key=\"tag.id\"><a :href=\"`/tag/${tag.slug}`\" class=\"bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1\"><div class=\"p-6\"><div class=\"flex items-center justify-between mb-3\"><h2 class=\"text-xl font-semibold text-gray-900 dark:text-white\" x-text=\"tag.name\"></h2><div class=\"bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center h-8 w-8\" x-html=\"tag.icon\"></div></div><div class=\"text-gray-600 dark:text-gray-300 mb-4 line-clamp-2\" x-text=\"tag.description\"></div><div class=\"flex items-center justify-between text-sm\"><span class=\"text-gray-500 dark:text-gray-400\" x-text=\"`${tag.postsCount} posts`\"></span> <span class=\"text-gray-500 dark:text-gray-400\" x-text=\"`${tag.projectsCount} projects`\"></span></div></div></a></template></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func worksTempl(
	posts *[]master.FullPost,
	projects *[]master.FullProject,
	tags *[]master.FullTag,
	fullPostsSlugMap *map[string]master.FullPost,
	fullProjectsSlugMap *map[string]master.FullProject,
	fullTagsSlugMap *map[string]master.FullTag,
) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var18 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var18 == nil {
			templ_7745c5c3_Var18 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		return nil
	})
}

var _ = templruntime.GeneratedTemplate

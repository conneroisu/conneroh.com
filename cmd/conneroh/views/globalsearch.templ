package views

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/cmd/conneroh/components"
	"github.com/conneroisu/conneroh.com/internal/assets"
	"github.com/conneroisu/twerge"
)

templ GlobalSearch(
	query string,
	posts []*assets.Post,
	projects []*assets.Project,
	tags []*assets.Tag,
	employments []*assets.Employment,
	page int,
	pageCount int,
) {
	<div
		class={ twerge.It("px-4 container mx-auto py-8") }
	>
		<h1
			class={ twerge.It("text-3xl font-bold mb-6 text-white") }
		>
			if query != "" {
				Search Results for "{ query }"
			} else {
				Search
			}
		</h1>
		<div
			class={ twerge.It("border-gray-700 border-b p-3 mb-6") }
		>
			<div
				class={ twerge.It("relative") }
			>
				<form
					hx-get="/search"
					hx-trigger="keyup changed delay:500ms from:input"
					hx-target="#bodiody"
					hx-push-url="true"
				>
					<input
						type="search"
						name="q"
						value={ query }
						placeholder="Search posts, projects, tags, and employments..."
						class={ twerge.It("w-full focus:outline-none border rounded-md pr-4 py-2 pl-10 bg-gray-700 text-white focus:ring-2 border-gray-600 focus:ring-green-500") }
						autofocus
					/>
					@components.Icon("search", templ.Attributes{
						"class": twerge.It("absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500"),
					})
				</form>
			</div>
		</div>
		if query != "" {
			@GlobalSearchResults(query, posts, projects, tags, employments, page, pageCount)
		} else {
			<div class={ twerge.It("text-center text-gray-400 py-12") }>
				<p class={ twerge.It("text-lg mb-2") }>Start typing to search across all content</p>
				<p class={ twerge.It("text-sm") }>Search posts, projects, tags, and employment history</p>
			</div>
		}
	</div>
}

templ GlobalSearchResults(
	query string,
	posts []*assets.Post,
	projects []*assets.Project,
	tags []*assets.Tag,
	employments []*assets.Employment,
	page int,
	pageCount int,
) {
	<div id="search-results">
		if len(posts) == 0 && len(projects) == 0 && len(tags) == 0 && len(employments) == 0 {
			<div class={ twerge.It("text-center text-gray-400 py-12") }>
				<p class={ twerge.It("text-lg") }>No results found for "{ query }"</p>
				<p class={ twerge.It("text-sm mt-2") }>Try different keywords or check your spelling</p>
			</div>
		} else {
			<div class={ twerge.It("space-y-8") }>
				if len(posts) > 0 {
					<div>
						<h2 class={ twerge.It("text-2xl font-semibold mb-4 text-white flex items-center") }>
							@components.Icon("file-text", templ.Attributes{
								"class": twerge.It("w-6 h-6 mr-2"),
							})
							Posts ({ fmt.Sprintf("%d", len(posts)) })
						</h2>
						<div class={ twerge.It("grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4") }>
							for i, post := range posts {
								if i < 6 {
									@components.PostItem(post, templ.Attributes{
										"class":       twerge.It("overflow-hidden bg-gray-800 transform rounded-lg transition-all hover:shadow-lg duration-300 shadow-md hover:-translate-y-1 cursor-pointer h-full"),
										"hx-target":   "#bodiody",
										"hx-get":      post.PagePath(),
										"hx-push-url": post.PagePath(),
										"preload":     "mouseover",
									})
								}
							}
						</div>
						if len(posts) > 6 {
							<a
								href={ templ.SafeURL(fmt.Sprintf("/posts?search=%s", query)) }
								class={ twerge.It("inline-block mt-3 text-green-400 hover:text-green-300 transition-colors") }
								hx-get={ fmt.Sprintf("/posts?search=%s", query) }
								hx-target="#bodiody"
								hx-push-url="true"
							>
								View all { fmt.Sprintf("%d", len(posts)) } posts →
							</a>
						}
					</div>
				}

				if len(projects) > 0 {
					<div>
						<h2 class={ twerge.It("text-2xl font-semibold mb-4 text-white flex items-center") }>
							@components.Icon("folder", templ.Attributes{
								"class": twerge.It("w-6 h-6 mr-2"),
							})
							Projects ({ fmt.Sprintf("%d", len(projects)) })
						</h2>
						<div class={ twerge.It("grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4") }>
							for i, project := range projects {
								if i < 6 {
									@components.ProjectItem(project, templ.Attributes{
										"class":       twerge.It("bg-gray-800 transition-all flex transform hover:-translate-y-3 flex-col shadow-md rounded-lg hover:shadow-lg duration-300 overflow-hidden h-full cursor-pointer"),
										"hx-target":   "#bodiody",
										"hx-get":      project.PagePath(),
										"hx-push-url": "true",
										"preload":     "mouseover",
									})
								}
							}
						</div>
						if len(projects) > 6 {
							<a
								href={ templ.SafeURL(fmt.Sprintf("/projects?search=%s", query)) }
								class={ twerge.It("inline-block mt-3 text-green-400 hover:text-green-300 transition-colors") }
								hx-get={ fmt.Sprintf("/projects?search=%s", query) }
								hx-target="#bodiody"
								hx-push-url="true"
							>
								View all { fmt.Sprintf("%d", len(projects)) } projects →
							</a>
						}
					</div>
				}

				if len(tags) > 0 {
					<div>
						<h2 class={ twerge.It("text-2xl font-semibold mb-4 text-white flex items-center") }>
							@components.Icon("tag", templ.Attributes{
								"class": twerge.It("w-6 h-6 mr-2"),
							})
							Tags ({ fmt.Sprintf("%d", len(tags)) })
						</h2>
						<div class={ twerge.It("grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4") }>
							for i, tag := range tags {
								if i < 9 {
									@components.TagItem(tag, templ.Attributes{
										"class":       twerge.It("p-6 rounded-lg overflow-hidden bg-gray-800 shadow-md hover:shadow-lg duration-300 transform transition-all hover:-translate-y-1 cursor-pointer h-full"),
										"hx-target":   "#bodiody",
										"hx-get":      tag.PagePath(),
										"hx-push-url": "true",
										"preload":     "mouseover",
									})
								}
							}
						</div>
						if len(tags) > 9 {
							<a
								href={ templ.SafeURL(fmt.Sprintf("/tags?search=%s", query)) }
								class={ twerge.It("inline-block mt-3 text-green-400 hover:text-green-300 transition-colors") }
								hx-get={ fmt.Sprintf("/tags?search=%s", query) }
								hx-target="#bodiody"
								hx-push-url="true"
							>
								View all { fmt.Sprintf("%d", len(tags)) } tags →
							</a>
						}
					</div>
				}

				if len(employments) > 0 {
					<div>
						<h2 class={ twerge.It("text-2xl font-semibold mb-4 text-white flex items-center") }>
							@components.Icon("briefcase", templ.Attributes{
								"class": twerge.It("w-6 h-6 mr-2"),
							})
							Employment History ({ fmt.Sprintf("%d", len(employments)) })
						</h2>
						<div class={ twerge.It("grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4") }>
							for i, employment := range employments {
								if i < 6 {
									@components.EmploymentItem(employment, templ.Attributes{
										"class":       twerge.It("overflow-hidden bg-gray-800 transform rounded-lg transition-all hover:shadow-lg duration-300 shadow-md hover:-translate-y-1 cursor-pointer h-full"),
										"hx-target":   "#bodiody",
										"hx-get":      employment.PagePath(),
										"hx-push-url": employment.PagePath(),
										"preload":     "mouseover",
									})
								}
							}
						</div>
						if len(employments) > 6 {
							<a
								href={ templ.SafeURL(fmt.Sprintf("/employments?search=%s", query)) }
								class={ twerge.It("inline-block mt-3 text-green-400 hover:text-green-300 transition-colors") }
								hx-get={ fmt.Sprintf("/employments?search=%s", query) }
								hx-target="#bodiody"
								hx-push-url="true"
							>
								View all { fmt.Sprintf("%d", len(employments)) } employments →
							</a>
						}
					</div>
				}
			</div>
		}
	</div>
}
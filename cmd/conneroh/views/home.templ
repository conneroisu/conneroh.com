package views

import (
	"fmt"
	"github.com/conneroisu/conneroh.com/internal/data/gen"
	"github.com/conneroisu/conneroh.com/internal/hx"
	"github.com/conneroisu/twerge"
)

templ Home(
	fullPosts *[]*gen.Post,
	fullProjects *[]*gen.Project,
	fullTags *[]*gen.Tag,
) {
	// Hero Section (top)
	<section
		class={ twerge.It("bg-gradient-to-b from-gray-900 to-gray-800 py-20") }
	>
		<div
			class={ twerge.It("container px-4 mx-auto") }
		>
			<div
				class={ twerge.It("lg:flex-row items-center justify-between flex flex-col") }
			>
				<div
					class={ twerge.It("lg:w-1/2 mb-10 lg:mb-0") }
				>
					<h1
						aria-label="Name"
						class={ twerge.It("text-white text-4xl font-bold lg:text-6xl mb-4 leading-tight md:text-5xl") }
					>
						Conner Ohnesorge
					</h1>
					<p
						aria-label="About Me"
						class={ twerge.It("text-xl text-gray-300 mb-8 max-w-md") }
					>
						Electrical Engineer & Software Developer specialized in creating robust, scalable, and elegant solutions.
					</p>
					<p
						aria-label="Education"
						class={ twerge.It("text-xl text-gray-300 mb-8 max-w-md") }
					>
						Electrical Engineering Bachelors Degree and Minor in Computer Science from
						<a
							href="https://iastate.edu/"
							class={ twerge.It("hover:underline") }
						>
							Iowa State University
						</a>
					</p>
					<div
						class={ twerge.It("flex flex-wrap gap-4") }
					>
						<a
							aria-label="View Projects"
							href="#projects"
							class={ twerge.It("py-3 font-medium px-6 rounded-md hover:opacity-90 transition-opacity bg-white text-gray-900") }
						>
							View Projects
						</a>
						<a
							aria-label="Contact Me"
							href="#contact"
							class={ twerge.It("py-3 border font-medium px-6 transition-colors hover:bg-gray-800 border-gray-600 text-gray-300 rounded-md") }
						>
							Contact Me
						</a>
					</div>
				</div>
				<div
					class={ twerge.It("lg:w-1/2 relative") }
				>
					<div
						class={ twerge.It("mx-auto bg-blue-600 md:h-80 w-64 relative md:w-80 shadow-lg rounded-full h-64") }
					>
						<div
							class={ twerge.It("text-white absolute text-xl justify-center inset-0 flex font-bold items-center") }
						>
							<img
								src="/dist/hero.jpeg"
								alt="me"
								aria-label="Photo of Me"
								class={ twerge.It("bg-blue-600 rounded-full relative shadow-lg mx-auto") }
							/>
						</div>
						// Decorative elements
						<div
							class={ twerge.It("absolute w-24 -right-4 bg-purple-600 -bottom-4 z-0 h-24 rounded-full") }
						></div>
						<div
							class={ twerge.It("absolute z-0 -top-4 h-16 bg-pink-600 rounded-full -left-4 w-16") }
						></div>
					</div>
				</div>
			</div>
		</div>
	</section>
	// Featured Projects Section
	<section
		id="projects"
		class={ twerge.It("bg-gray-800 py-16") }
	>
		<div
			class={ twerge.It("container px-4 mx-auto") }
		>
			<div
				class={ twerge.It("flex flex-col md:flex-row justify-between items-center mb-12 pr-4") }
			>
				<h2
					class={ twerge.It("mb-4 text-3xl font-bold text-white") }
				>
					Featured Projects
				</h2>
				<a
					hx-get="/morph/projects"
					hx-trigger="click"
					hx-push-url="/projects"
					hx-target={ hx.Bodiody.Sel }
					preload="mouseover"
					class={ twerge.It("font-medium flex items-center text-blue-400 hover:underline text-lg") }
				>
					View All Projects
					@icon("arrow-right", templ.Attributes{})
				</a>
			</div>
			<div
				class={ twerge.It("grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8") }
			>
				for i, project := range *fullProjects {
					if i < 6 {
						<div
							class={ twerge.It("bg-gray-900 hover:scale-105 duration-300 overflow-hidden hover:shadow-lg shadow-md rounded-lg transition-transform") }
						>
							<a
								hx-get={ fmt.Sprintf("/morph/project/%s", project.Slug) }
								hx-push-url={ fmt.Sprintf("/project/%s", project.Slug) }
								hx-trigger="click"
								hx-swap="innerHTML"
								hx-target={ hx.Bodiody.Sel }
								preload="mouseover"
								class={ twerge.It("block cursor-pointer") }
							>
								<div
									class={ twerge.It("justify-center overflow-hidden h-48 bg-gray-700 flex items-center") }
								>
									if project.BannerPath != "" {
										@image(
											project.BannerPath,
											fmt.Sprintf("banner-%s", project.Slug),
											twerge.It("w-full h-full object-cover"),
										)
									} else {
										// Project image placeholder
										<svg
											xmlns="http://www.w3.org/2000/svg"
											class={ twerge.It("w-12 text-gray-500 h-12") }
											fill="none"
											viewBox="0 0 24 24"
											stroke="currentColor"
										>
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01"></path>
										</svg>
									}
								</div>
								<div
									class={ twerge.It("p-6") }
								>
									<h3
										class={ twerge.It("text-white mb-2 text-xl font-bold") }
									>
										{ project.Title }
									</h3>
									<p
										class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
									>
										{ project.Description }
									</p>
									<div
										class={ twerge.It("gap-2 mb-4 flex flex-wrap") }
									>
										for _, tag := range project.Tags {
											<a
												href={ templ.SafeURL("/tag/" + tag.Slug) }
												class={ twerge.It("bg-blue-900 text-blue-200 px-3 font-medium py-1 rounded-full inline-block text-sm transition-colors hover:bg-blue-800") }
											>
												{ tag.Slug }
											</a>
										}
									</div>
									<a
										hx-get={ fmt.Sprintf("/morph/project/%s", project.Slug) }
										hx-push-url={ fmt.Sprintf("/project/%s", project.Slug) }
										hx-trigger="click"
										hx-target={ hx.Bodiody.Sel }
										preload="mouseover"
										class={ twerge.It("font-medium flex items-center text-blue-400 hover:underline text-sm") }
									>
										View Project
										@icon("arrow-right", templ.Attributes{})
									</a>
								</div>
							</a>
						</div>
					}
				}
			</div>
		</div>
	</section>
	// Recent Posts Section
	<section
		class={ twerge.It("bg-gray-900 py-16") }
	>
		<div
			class={ twerge.It("container px-4 mx-auto") }
		>
			<div
				class={ twerge.It("flex flex-col md:flex-row justify-between items-center mb-12 pr-4") }
			>
				<h2
					class={ twerge.It("mb-4 text-3xl font-bold text-white") }
				>
					Recent Posts
				</h2>
				<a
					hx-get="/morph/posts"
					hx-trigger="click"
					hx-push-url="/posts"
					hx-target={ hx.Bodiody.Sel }
					class={ twerge.It("font-medium flex items-center text-blue-400 hover:underline text-lg") }
					preload="mouseover"
				>
					View All Posts
					@icon("arrow-right", templ.Attributes{})
				</a>
			</div>
			<div
				class={ twerge.It("grid-cols-1 lg:grid-cols-2 gap-8 grid") }
			>
				for i, post := range *fullPosts {
					if i < 4 {
						<div
							aria-label={ post.Title }
							class={ twerge.It("rounded-lg shadow-md transition-transform bg-gray-800 overflow-hidden hover:scale-105 hover:shadow-lg duration-300") }
						>
							<a
								hx-get={ fmt.Sprintf("/morph/post/%s", post.Slug) }
								hx-push-url={ fmt.Sprintf("/post/%s", post.Slug) }
								hx-trigger="click"
								hx-swap="innerHTML"
								hx-target={ hx.Bodiody.Sel }
								preload="mouseover"
								class={ twerge.It("block cursor-pointer") }
							>
								// Post banner image
								<div
									class={ twerge.It("h-48 bg-gray-700 overflow-hidden") }
								>
									if post.BannerPath != "" {
										@image(
											post.BannerPath,
											fmt.Sprintf("banner-%s", post.Slug),
											"w-full h-full object-cover",
										)
									} else {
										<div
											class={ twerge.It("flex items-center justify-center w-full h-full") }
										>
											<svg
												xmlns="http://www.w3.org/2000/svg"
												class={ twerge.It("w-12 text-gray-500 h-12") }
												fill="none"
												viewBox="0 0 24 24"
												stroke="currentColor"
											>
												<path
													stroke-linecap="round"
													stroke-linejoin="round"
													stroke-width="2"
													d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1M19 20a2 2 0 002-2V8a2 2 0 00-2-2h-5a2 2 0 00-2 2v12a2 2 0 002 2h5z"
												></path>
											</svg>
										</div>
									}
								</div>
								<div
									class={ twerge.It("p-6") }
								>
									<h3
										class={ twerge.It("text-white mb-2 text-xl font-bold") }
									>
										{ post.Title }
									</h3>
									<p
										class={ twerge.It("mb-4 line-clamp-2 text-gray-300") }
									>
										{ post.Description }
									</p>
									<div
										class={ twerge.It("gap-2 mb-4 flex flex-wrap") }
									>
										for _, tag := range post.Tags {
											<a
												hx-get={ fmt.Sprintf("/morph/tag/%s", tag.Slug) }
												hx-push-url={ fmt.Sprintf("/tag/%s", tag.Slug) }
												hx-trigger="click"
												hx-target={ hx.Bodiody.Sel }
												preload="mouseover"
												class={ twerge.It("py-1 rounded-md px-2 bg-green-900 transition-colors text-xs hover:bg-green-800 text-green-200") }
											>
												{ tag.Slug }
											</a>
										}
									</div>
									<a
										hx-get={ fmt.Sprintf("/morph/post/%s", post.Slug) }
										hx-push-url={ fmt.Sprintf("/post/%s", post.Slug) }
										hx-trigger="click"
										hx-target={ hx.Bodiody.Sel }
										preload="mouseover"
										class={ twerge.It("font-medium flex items-center text-blue-400 hover:underline text-sm") }
									>
										Read Post
										<svg
											xmlns="http://www.w3.org/2000/svg"
											class={ twerge.It("ml-1 h-4 w-4") }
											viewBox="0 0 20 20"
											fill="currentColor"
										>
											<path
												fill-rule="evenodd"
												d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
												clip-rule="evenodd"
											></path>
										</svg>
									</a>
								</div>
							</a>
						</div>
					}
				}
			</div>
		</div>
	</section>
	// Skills/Tags Section
	<section
		class={ twerge.It("bg-gray-800 py-16") }
	>
		<div
			class={ twerge.It("container px-4 mx-auto") }
		>
			<div
				class={ twerge.It("flex flex-col md:flex-row justify-between items-center mb-12 pr-4") }
			>
				<h2
					class={ twerge.It("mb-4 text-3xl font-bold text-white") }
				>
					Skills & Technologies
				</h2>
				<a
					hx-target={ hx.Bodiody.Sel }
					hx-trigger="click"
					hx-push-url="/tags"
					preload="mouseover"
					class={ twerge.It("font-medium flex items-center text-blue-400 hover:underline text-lg") }
				>
					See All Skills/Technologies
					@icon("arrow-right", templ.Attributes{})
				</a>
			</div>
			<div
				class={ twerge.It("grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 grid") }
			>
				for _, tag := range *fullTags {
					<a
						hx-target={ hx.Bodiody.Sel }
						hx-trigger="click"
						hx-push-url={ fmt.Sprintf("/tag/%s", tag.Slug) }
						hx-get={ fmt.Sprintf("/morph/tag/%s", tag.Slug) }
						preload="mouseover"
						class={ twerge.It("p-6 text-center hover:shadow-md block rounded-lg transition-shadow bg-gray-900") }
						aria-label={ tag.Title }
					>
						<div
							class={ twerge.It("items-center flex mb-4 justify-center h-12 w-12 mx-auto bg-blue-900 rounded-full") }
						>
							@icon(tag.Icon, templ.Attributes{})
						</div>
						<h3
							class={ twerge.It("text-white font-medium") }
						>
							{ tag.Title }
						</h3>
					</a>
				}
			</div>
		</div>
	</section>
	// Contact Section
	<section
		id="contact"
		class={ twerge.It("bg-gray-900 py-16") }
		aria-label="Contact"
	>
		<div
			class={ twerge.It("container px-4 mx-auto") }
		>
			<div
				class={ twerge.It("text-center max-w-2xl mx-auto") }
			>
				<h2
					class={ twerge.It("mb-4 text-3xl font-bold text-white") }
				>
					Get In Touch
				</h2>
				<p
					class={ twerge.It("text-gray-300 mb-8") }
				>
					Interested in working together? Feel free to reach out through any of the channels below.
				</p>
				<div
					class={ twerge.It("mb-8 flex flex-wrap justify-center gap-4") }
				>
					// Social links
					<a
						href="https://www.linkedin.com/in/conner-ohnesorge-b720a4238"
						class={ twerge.It("h-12 items-center w-12 flex bg-gray-700 rounded-full transition-colors justify-center hover:bg-blue-400 text-gray-300") }
					>
						@icon("linkedin", templ.Attributes{})
					</a>
					<a
						href="https://github.com/conneroisu"
						class={ twerge.It("text-gray-300 bg-gray-700 transition-colors justify-center flex rounded-full hover:bg-gray-800 w-12 h-12 items-center") }
					>
						@icon("github", templ.Attributes{})
					</a>
					<a
						href="https://x.com/ConnerOhnesorge"
						class={ twerge.It("h-12 items-center w-12 flex bg-gray-700 rounded-full transition-colors justify-center hover:bg-blue-400 text-gray-300") }
					>
						@icon("twitter", templ.Attributes{})
					</a>
					<a
						href="mailto:conneroisu@outlook.com"
						class={ twerge.It("justify-center items-center h-12 hover:bg-red-500 flex w-12 transition-colors rounded-full text-gray-300 bg-gray-700") }
					>
						@icon("mail", templ.Attributes{})
					</a>
				</div>
				<div
					class={ twerge.It("p-8 rounded-lg shadow-md bg-gray-800") }
				>
					<form
						class={ twerge.It("space-y-6") }
					>
						<div
							class={ twerge.It("md:grid-cols-2 gap-6 grid grid-cols-1") }
						>
							<div>
								<label
									for="name"
									class={ twerge.It("text-sm font-medium text-gray-300 mb-1 block") }
								>
									Name
								</label>
								<input
									type="text"
									id="name"
									name="name"
									class={ twerge.It("focus:ring-2 px-4 border py-2 border-gray-600 w-full focus:ring-blue-500 bg-gray-700 text-white focus:outline-none rounded-md") }
									required
								/>
							</div>
							<div>
								<label
									for="email"
									class={ twerge.It("text-sm font-medium text-gray-300 mb-1 block") }
								>
									Email
								</label>
								<input
									type="email"
									id="email"
									name="email"
									class={ twerge.It("focus:ring-2 px-4 border py-2 border-gray-600 w-full focus:ring-blue-500 bg-gray-700 text-white focus:outline-none rounded-md") }
									required
								/>
							</div>
						</div>
						<div>
							<label
								for="subject"
								class={ twerge.It("text-sm font-medium text-gray-300 mb-1 block") }
							>
								Subject
							</label>
							<input
								type="text"
								id="subject"
								name="subject"
								class={ twerge.It("focus:ring-2 px-4 border py-2 border-gray-600 w-full focus:ring-blue-500 bg-gray-700 text-white focus:outline-none rounded-md") }
								required
							/>
						</div>
						<div>
							<label
								for="message"
								class={ twerge.It("text-sm font-medium text-gray-300 mb-1 block") }
							>
								Message
							</label>
							<textarea
								id="message"
								name="message"
								rows="4"
								class={ twerge.It("focus:ring-2 px-4 border py-2 border-gray-600 w-full focus:ring-blue-500 bg-gray-700 text-white focus:outline-none rounded-md") }
								required
							></textarea>
						</div>
						<button
							type="submit"
							class={ twerge.It("focus:ring-2 rounded-md focus:ring-blue-500 transition-colors w-full hover:bg-blue-700 focus:outline-none font-medium text-white bg-blue-600 px-6 focus:ring-offset-2 py-3") }
						>
							Send Message
						</button>
					</form>
				</div>
			</div>
		</div>
	</section>
}

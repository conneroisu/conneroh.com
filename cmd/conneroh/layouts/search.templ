package layouts

import "github.com/conneroisu/twerge"

templ search() {
	<div
		class={ twerge.It("relative") }
		x-data="{
			isSearchOpen: false,
			searchQuery: '',
			searchResults: [],
			isLoading: false,
			showResults: false,

			async search() {
				if (this.searchQuery.trim().length < 2) {
					this.searchResults = [];
					this.showResults = false;
					return;
				}
				
				this.isLoading = true;
				this.showResults = true;
				
				// Simulate search results for demonstration
				// In a real app, you would make an API call here
				await new Promise(resolve => setTimeout(resolve, 300));
				
				// Sample search logic - would be replaced with actual API call
				this.searchResults = [
					{ type: 'post', title: 'Modern Frontend with HTMX', url: '/post/modern-frontend-htmx-alpine' },
					{ type: 'project', title: 'Project 2', url: '/project/project-2' },
					{ type: 'tag', title: 'Programming Languages', url: '/tag/programming-languages-go' }
				].filter(item => 
					item.title.toLowerCase().includes(this.searchQuery.toLowerCase())
				);
				
				this.isLoading = false;
			},
			
			// Initialize search when opened
			init() {
				this.$watch('isSearchOpen', (value) => {
					if (value && this.$refs.searchInput) {
						setTimeout(() => {
							this.$refs.searchInput.focus();
						}, 100);
					}
				});
				
				// Initialize search when typing
				this.$watch('searchQuery', () => {
					this.search();
				});
			}
		}"
	>
		// Desktop search
		<div
			class={ twerge.It("hidden md:flex items-center") }
		>
			<button
				@click="isSearchOpen = !isSearchOpen"
				class={ twerge.It("p-2 text-gray-300 hover:text-white rounded-md hover:bg-gray-700 transition-colors") }
			>
				@icon("search", templ.Attributes{})
			</button>
			// Search dropdown
			<div
				x-show="isSearchOpen"
				@click.away="isSearchOpen = false"
				class={ twerge.It("absolute right-0 top-full mt-2 w-80 bg-gray-800 shadow-lg rounded-lg overflow-hidden z-30") }
				x-transition:enter="transition ease-out duration-200"
				x-transition:enter-start="opacity-0 scale-95"
				x-transition:enter-end="opacity-100 scale-100"
				x-transition:leave="transition ease-in duration-150"
				x-transition:leave-start="opacity-100 scale-100"
				x-transition:leave-end="opacity-0 scale-95"
			>
				// Search input
				<div
					class={ twerge.It("p-3 border-b border-gray-700") }
				>
					<div
						class={ twerge.It("relative") }
					>
						<input
							x-ref="searchInput"
							x-model="searchQuery"
							class={ twerge.It("w-full pl-10 pr-4 py-2 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-700 text-gray-900 text-white") }
							type="search"
							placeholder="Search site..."
							aria-label="Search"
							@keydown.escape="isSearchOpen = false"
							@keydown.enter="if (searchResults.length > 0) window.location.href = searchResults[0].url"
						/>
						<div
							class={ twerge.It("absolute left-3 top-2.5 text-gray-500") }
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class={ twerge.It("h-5 w-5") }
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
							</svg>
						</div>
					</div>
				</div>
				// Results container
				<div
					class={ twerge.It("max-h-64 overflow-y-auto") }
					x-show="showResults"
				>
					// Loading indicator
					<div
						x-show="isLoading"
						class={ twerge.It("p-4 text-center text-gray-400") }
					>
						<svg
							class={ twerge.It("w-5 mx-auto animate-spin h-5") }
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
						>
							<circle
								class={ twerge.It("opacity-25") }
								cx="12"
								cy="12"
								r="10"
								stroke="currentColor"
								stroke-width="4"
							></circle>
							<path
								class={ twerge.It("opacity-75") }
								fill="currentColor"
								d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
							></path>
						</svg>
					</div>
					// No results message
					<div
						x-show="!isLoading && searchQuery.length >= 2 && searchResults.length === 0"
						class={ twerge.It("p-4 text-center text-gray-400") }
					>
						No results found for "<span x-text="searchQuery"></span>"
					</div>
					// Results list
					<div
						x-show="!isLoading && searchResults.length > 0"
					>
						<h3
							class={ twerge.It("text-xs font-semibold text-gray-400 uppercase tracking-wider px-4 pt-3 pb-2") }
						>
							Search Results
						</h3>
						<ul>
							<template
								x-for="(result, index) in searchResults"
								:key="index"
							>
								<li>
									<a
										:href="result.url"
										class={ twerge.It("transition-colors px-4 block py-3 hover:bg-gray-700") }
										@click="isSearchOpen = false"
									>
										<div
											class={ twerge.It("flex items-center") }
										>
											// Icon based on result type
											<div
												class={ twerge.It("mr-3 text-gray-500") }
											>
												<svg
													x-show="result.type === 'post'"
													xmlns="http://www.w3.org/2000/svg"
													class={ twerge.It("h-5 w-5") }
													fill="none"
													viewBox="0 0 24 24"
													stroke="currentColor"
												>
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1M19 20a2 2 0 002-2V8a2 2 0 00-2-2h-5a2 2 0 00-2 2v12a2 2 0 002 2h5z"></path>
												</svg>
												<svg
													x-show="result.type === 'project'"
													xmlns="http://www.w3.org/2000/svg"
													class={ twerge.It("h-5 w-5") }
													fill="none"
													viewBox="0 0 24 24"
													stroke="currentColor"
												>
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
												</svg>
												<svg
													x-show="result.type === 'tag'"
													xmlns="http://www.w3.org/2000/svg"
													class={ twerge.It("h-5 w-5") }
													fill="none"
													viewBox="0 0 24 24"
													stroke="currentColor"
												>
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
												</svg>
											</div>
											<div>
												<p
													class={ twerge.It("text-sm font-medium text-white") }
													x-text="result.title"
												></p>
												<p
													class={ twerge.It("text-xs text-gray-400") }
													x-text="result.type.charAt(0).toUpperCase() + result.type.slice(1)"
												></p>
											</div>
										</div>
									</a>
								</li>
							</template>
						</ul>
						// View all results link
						<div
							class={ twerge.It("px-4 py-3 border-t border-gray-700") }
						>
							<a
								:href="'/search?q=' + encodeURIComponent(searchQuery)"
								class={ twerge.It("block text-center text-sm text-blue-400 hover:underline") }
								@click="isSearchOpen = false"
							>
								View all results
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		// Mobile search toggle button
		<button
			@click="isSearchOpen = !isSearchOpen"
			class={ twerge.It("text-gray-300 hover:text-white focus:outline-none md:hidden") }
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class={ twerge.It("h-5 w-5") }
				x-show="!isSearchOpen"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
				></path>
			</svg>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class={ twerge.It("h-5 w-5") }
				x-show="isSearchOpen"
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
			>
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
			</svg>
		</button>
		// Mobile search panel
		<div
			x-show="isSearchOpen"
			class={ twerge.It("md:hidden fixed inset-0 z-50 bg-gray-900 pt-16 px-4 pb-4") }
			x-transition:enter="transition ease-out duration-200"
			x-transition:enter-start="opacity-0"
			x-transition:enter-end="opacity-100"
			x-transition:leave="transition ease-in duration-150"
			x-transition:leave-start="opacity-100"
			x-transition:leave-end="opacity-0"
		>
			// Close button for mobile
			<button
				@click="isSearchOpen = false"
				class={ twerge.It("absolute top-4 right-4 text-gray-300 hover:text-white") }
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class={ twerge.It("h-6 w-6") }
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
				>
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</button>
			<h2
				class={ twerge.It("text-xl font-bold text-white mb-4") }
			>Search</h2>
			// Mobile search input
			<div
				class={ twerge.It("relative mb-4") }
			>
				<input
					x-ref="mobileSearchInput"
					x-model="searchQuery"
					class={ twerge.It("w-full pl-10 pr-4 py-3 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-800 text-white") }
					type="search"
					placeholder="Search site..."
					aria-label="Search"
					@keydown.enter="if (searchResults.length > 0) window.location.href = searchResults[0].url"
				/>
				<div
					class={ twerge.It("absolute left-3 top-3.5 text-gray-500") }
				>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class={ twerge.It("h-5 w-5") }
						fill="none"
						viewBox="0 0 24 24"
						stroke="currentColor"
					>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
					</svg>
				</div>
			</div>
			// Mobile results container
			<div
				class={ twerge.It("overflow-y-auto mt-4 max-h-[calc(100vh-180px)]") }
			>
				// Loading indicator
				<div
					x-show="isLoading"
					class={ twerge.It("py-8 text-center text-gray-400") }
				>
					<svg
						class={ twerge.It("animate-spin h-8 w-8 mx-auto mb-2") }
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 24 24"
					>
						<circle
							class={ twerge.It("opacity-25") }
							cx="12"
							cy="12"
							r="10"
							stroke="currentColor"
							stroke-width="4"
						></circle>
						<path
							class={ twerge.It("opacity-75") }
							fill="currentColor"
							d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
						></path>
					</svg>
					<p>Searching...</p>
				</div>
				// No results message
				<div
					x-show="!isLoading && searchQuery.length >= 2 && searchResults.length === 0"
					class={ twerge.It("py-8 text-center text-gray-400") }
				>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class={ twerge.It("h-16 w-16 mx-auto mb-4 text-gray-600") }
						fill="none"
						viewBox="0 0 24 24"
						stroke="currentColor"
					>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
					</svg>
					<p
						class={ twerge.It("text-lg") }
					>
						No results found for "
						<span x-text="searchQuery"></span>"
					</p>
					<p
						class={ twerge.It("mt-2") }
					>Try different keywords or check spelling</p>
				</div>
				// Results list
				<div
					x-show="!isLoading && searchResults.length > 0"
				>
					<h3
						class={ twerge.It("text-sm font-semibold text-gray-400 uppercase tracking-wider mb-3") }
					>
						Search Results
					</h3>
					<ul
						class={ twerge.It("space-y-2") }
					>
						<template x-for="(result, index) in searchResults" :key="index">
							<li
								class={ twerge.It("bg-gray-800 rounded-lg shadow-sm") }
							>
								<a
									:href="result.url"
									class={ twerge.It("block p-4 hover:bg-gray-700 rounded-lg transition-colors") }
									@click="isSearchOpen = false"
								>
									<div
										class={ twerge.It("flex items-center") }
									>
										// Icon based on result type
										<div
											class={ twerge.It("flex-shrink-0 flex items-center bg-blue-900 mr-4 h-10 w-10 justify-center text-blue-300 rounded-full") }
										>
											<svg
												x-show="result.type === 'post'"
												xmlns="http://www.w3.org/2000/svg"
												class={ twerge.It("h-5 w-5") }
												fill="none"
												viewBox="0 0 24 24"
												stroke="currentColor"
											>
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1M19 20a2 2 0 002-2V8a2 2 0 00-2-2h-5a2 2 0 00-2 2v12a2 2 0 002 2h5z"></path>
											</svg>
											<svg
												x-show="result.type === 'project'"
												xmlns="http://www.w3.org/2000/svg"
												class={ twerge.It("h-5 w-5") }
												fill="none"
												viewBox="0 0 24 24"
												stroke="currentColor"
											>
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
											</svg>
											<svg
												x-show="result.type === 'tag'"
												xmlns="http://www.w3.org/2000/svg"
												class={ twerge.It("h-5 w-5") }
												fill="none"
												viewBox="0 0 24 24"
												stroke="currentColor"
											>
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
											</svg>
										</div>
										<div>
											<p
												class={ twerge.It("text-base font-medium text-white") }
												x-text="result.title"
											></p>
											<p
												class={ twerge.It("text-sm text-gray-400") }
												x-text="result.type.charAt(0).toUpperCase() + result.type.slice(1)"
											></p>
										</div>
									</div>
								</a>
							</li>
						</template>
					</ul>
					// View all results link
					<div
						class={ twerge.It("mt-4 pt-4 border-t border-gray-700") }
					>
						<a
							:href="'/search?q=' + encodeURIComponent(searchQuery)"
							class={ twerge.It("block w-full py-3 px-4 bg-blue-500 hover:bg-blue-600 text-white font-medium text-center rounded-lg transition-colors") }
							@click="isSearchOpen = false"
						>
							View all results
						</a>
					</div>
				</div>
			</div>
		</div>
	</div>
}

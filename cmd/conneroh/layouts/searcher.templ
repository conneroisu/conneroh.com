package layouts

// Searcher provides a reusable search component with filter dropdown
// searchModel: The Alpine.js model for the search text (e.g., "searchQuery")
// filterModel: The Alpine.js model for the filter dropdown (e.g., "selectedTag" or "selectedSection")
// searchPlaceholder: Placeholder text for the search input
// filterPlaceholder: Placeholder text for the filter dropdown
// filterOptions: The Alpine.js expression to get the filter options (e.g., "tags" or "sections")
// updateHandler: Optional handler for the input event (e.g., "updateURL")
// changeHandler: Optional handler for the filter change event (e.g., "updateURL")
templ Searcher(
	searchModel string,
	filterModel string,
	searchPlaceholder string,
	filterPlaceholder string,
	filterOptions string,
	updateHandler string,
	changeHandler string,
) {
	<div
		class="flex flex-col md:flex-row justify-between mb-8 gap-4"
	>
		<div
			class="relative w-full md:w-1/2"
		>
			<input
				type="text"
				x-model={ searchModel }
				if updateHandler != "" {
					@input={ updateHandler }
				}
				placeholder={ searchPlaceholder }
				class="w-full px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
			/>
			<div class="absolute right-3 top-2.5 text-gray-400">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
				</svg>
			</div>
		</div>
		<div class="w-full md:w-1/3">
			<select
				x-model={ filterModel }
				if changeHandler != "" {
					@change={ changeHandler }
				}
				class="w-full px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"
			>
				<option value="">{ filterPlaceholder }</option>
				<template
					x-for={ "option in " + filterOptions }
					:key="option"
				>
					<option
						x-text="option"
						:value="option"
					></option>
				</template>
			</select>
		</div>
	</div>
}

// SearchResult shows the count of filtered results
templ SearchResult(totalVar string, filteredVar string) {
	<p
		class="text-sm text-gray-500 dark:text-gray-400 mb-4"
		x-text={ "`Showing ${" + filteredVar + ".length} of ${" + totalVar + ".length}`" }
	></p>
}

// EmptySearchResults shows a message when no results match the search
templ EmptySearchResults(filteredVar string, clearFiltersFunc string) {
	<div
		class="col-span-full py-12 text-center text-gray-500 dark:text-gray-400"
		x-show={ "!" + filteredVar + ".length" }
	>
		<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
			<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
		</svg>
		<p class="text-lg">No results match your search</p>
		<button
			@click={ clearFiltersFunc }
			class="mt-4 px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 hover:underline"
		>
			Clear filters
		</button>
	</div>
}

// LoadingState shows a loading animation
templ LoadingState() {
	<div class="flex justify-center py-12">
		<div class="animate-pulse flex space-x-4">
			<div class="rounded-full bg-gray-300 dark:bg-gray-700 h-12 w-12"></div>
			<div class="flex-1 space-y-4 py-1">
				<div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-3/4"></div>
				<div class="space-y-2">
					<div class="h-4 bg-gray-300 dark:bg-gray-700 rounded"></div>
					<div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-5/6"></div>
				</div>
			</div>
		</div>
	</div>
}
